
UPDATE AU_SERIESPHOTO SET TASK_ID=${taskId} where PHOTO_ID IN (SELECT PID FROM TEMP_AU_SERIESPHOTO) ;
UPDATE AU_ADAS_GPSTRACK SET TASK_ID=${taskId} where GPSTRACK_ID IN (SELECT PID FROM TEMP_AU_ADAS_GPSTRACK) ;
UPDATE AU_MARK SET TASK_ID=${taskId},MERGE_FLAG=${dmsStatus} where MARK_ID IN (SELECT PID FROM TEMP_AU_MARK) AND MERGE_FLAG=0 AND TYPE in (0,6) AND (Mark_ITEM IN(17,24,77,78) OR (Mark_ITEM=61 AND PARAM_EX IN('限速','解除限速','条件限速开始','条件限速结束'))) ;

UPDATE AU_IX_POI SET GEO_TASK_ID=decode(GEO_TASK_ID,0,${taskId},decode(GEO_OPRSTATUS,0,${taskId},GEO_TASK_ID)),ATT_TASK_ID=decode(ATT_TASK_ID,0,${taskId},decode(ATT_OPRSTATUS,0,${taskId},ATT_TASK_ID)),GEO_OPRSTATUS=decode(GEO_OPRSTATUS,0,${dmsStatus},GEO_OPRSTATUS),ATT_OPRSTATUS=decode(ATT_OPRSTATUS,0,${dmsStatus},ATT_OPRSTATUS) where AUDATA_ID IN (SELECT PID FROM TEMP_IX_POI) AND (GEO_OPRSTATUS=0 OR ATT_OPRSTATUS=0) AND STATE <>0;
UPDATE AU_IX_POINTADDRESS SET GEO_TASK_ID=decode(GEO_TASK_ID,0,${taskId},decode(GEO_OPRSTATUS,0,${taskId},GEO_TASK_ID)),ATT_TASK_ID=decode(ATT_TASK_ID,0,${taskId},decode(ATT_OPRSTATUS,0,${taskId},ATT_TASK_ID)),GEO_OPRSTATUS=decode(GEO_OPRSTATUS,0,${dmsStatus},GEO_OPRSTATUS),ATT_OPRSTATUS=decode(ATT_OPRSTATUS,0,${dmsStatus},ATT_OPRSTATUS)  where AUDATA_ID IN (SELECT PID FROM TEMP_IX_POINTADDRESS)  AND (GEO_OPRSTATUS=0 OR ATT_OPRSTATUS=0) AND STATE <>0;
UPDATE AU_IX_ANNOTATION SET GEO_TASK_ID=decode(GEO_TASK_ID,0,${taskId},decode(GEO_OPRSTATUS,0,${taskId},GEO_TASK_ID)),ATT_TASK_ID=decode(ATT_TASK_ID,0,${taskId},decode(ATT_OPRSTATUS,0,${taskId},ATT_TASK_ID)),GEO_OPRSTATUS=decode(GEO_OPRSTATUS,0,${dmsStatus},GEO_OPRSTATUS),ATT_OPRSTATUS=decode(ATT_OPRSTATUS,0,${dmsStatus},ATT_OPRSTATUS)  where AUDATA_ID IN (SELECT PID FROM TEMP_IX_ANNOTATION)  AND (GEO_OPRSTATUS=0 OR ATT_OPRSTATUS=0) AND FIELD_MODIFY_FLAG IS NOT NULL ;

UPDATE AU_PT_POI SET GEO_TASK_ID=decode(GEO_TASK_ID,0,${taskId},decode(GEO_OPRSTATUS,0,${taskId},GEO_TASK_ID)),ATT_TASK_ID=decode(ATT_TASK_ID,0,${taskId},decode(ATT_OPRSTATUS,0,${taskId},ATT_TASK_ID)),GEO_OPRSTATUS=decode(GEO_OPRSTATUS,0,${dmsStatus},GEO_OPRSTATUS),ATT_OPRSTATUS=decode(ATT_OPRSTATUS,0,${dmsStatus},ATT_OPRSTATUS)  where AUDATA_ID IN (SELECT PID FROM TEMP_PT_POI)  AND (GEO_OPRSTATUS=0 OR ATT_OPRSTATUS=0) AND STATE <>0;
UPDATE AU_PT_PLATFORM SET GEO_TASK_ID=decode(GEO_TASK_ID,0,${taskId},decode(GEO_OPRSTATUS,0,${taskId},GEO_TASK_ID)),ATT_TASK_ID=decode(ATT_TASK_ID,0,${taskId},decode(ATT_OPRSTATUS,0,${taskId},ATT_TASK_ID)),GEO_OPRSTATUS=decode(GEO_OPRSTATUS,0,${dmsStatus},GEO_OPRSTATUS),ATT_OPRSTATUS=decode(ATT_OPRSTATUS,0,${dmsStatus},ATT_OPRSTATUS)  where AUDATA_ID IN (SELECT PID FROM TEMP_PT_PLATFORM)  AND (GEO_OPRSTATUS=0 OR ATT_OPRSTATUS=0) AND STATE <>0;
UPDATE AU_PT_LINE SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_LINE)  AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_STRAND SET GEO_TASK_ID=${taskId},ATT_TASK_ID=${taskId},GEO_OPRSTATUS=decode(GEO_OPRSTATUS,0,${dmsStatus},GEO_OPRSTATUS),ATT_OPRSTATUS=decode(ATT_OPRSTATUS,0,${dmsStatus},ATT_OPRSTATUS)  where AUDATA_ID IN (SELECT PID FROM TEMP_PT_STRAND)  AND (GEO_OPRSTATUS=0 OR ATT_OPRSTATUS=0) AND STATE <>0;
UPDATE AU_PT_COMPANY SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_COMPANY)  AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_SYSTEM SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_SYSTEM)  AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_TRANSFER SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_TRANSFER) AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_STRAND_PLATFORM SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_STRAND) AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_PLATFORM_ACCESS SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_PLATFORM) AND ATT_OPRSTATUS = 0 ;

UPDATE AU_PT_ETA_STOP SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_ETA_STOP) AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_ETA_ACCESS SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_ETA_ACCESS) AND ATT_OPRSTATUS = 0 AND STATE <>0;
UPDATE AU_PT_ETA_LINE SET ATT_TASK_ID=${taskId},ATT_OPRSTATUS=${dmsStatus} where AUDATA_ID IN (SELECT PID FROM TEMP_PT_ETA_LINE) AND ATT_OPRSTATUS = 0 AND STATE <>0;
