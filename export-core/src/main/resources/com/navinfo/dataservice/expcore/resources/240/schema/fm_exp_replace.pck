CREATE OR REPLACE PACKAGE FM_EXP_RESULT_REPLACE IS

  PROCEDURE REPLACE;

  PROCEDURE calculate;

  PROCEDURE DATACOMBINE(V_PID VARCHAR2);

  PROCEDURE DATAREPLACE;

END FM_EXP_RESULT_REPLACE;
/
CREATE OR REPLACE PACKAGE BODY FM_EXP_RESULT_REPLACE IS

  PROCEDURE CALCULATE IS
    CURSOR C_PIDS IS
      SELECT PID FROM FM_IMP_RESULT_DULP P WHERE P.FLAG = 1;
    C_PID C_PIDS%ROWTYPE;
  BEGIN
    FOR C_PID IN C_PIDS LOOP
      DATACOMBINE(C_PID.PID);
    END LOOP;
    UPDATE IX_POI P
       SET (P.LOG, P.STATE, P.FIELD_STATE) =
           (SELECT LOG, STATE, FIELD_STATE
              FROM FM_IMP_RESULT_DULP T
             WHERE P.PID = T.PID
               AND T.FLAG = 1)
     WHERE EXISTS (SELECT 1
              FROM FM_IMP_RESULT_DULP T2
             WHERE P.PID = T2.PID
               AND T2.FLAG = 1);
  
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE(' ERROR:' || SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  PROCEDURE DATACOMBINE(V_PID IN VARCHAR2) IS
    CURSOR C_RESULT IS
      SELECT PID, LOG, FIELD_STATE, FLAG
        FROM FM_IMP_RESULT_DULP P
       WHERE P.PID = V_PID;
    C_ROW C_RESULT%ROWTYPE;
  BEGIN
    FOR C_ROW IN C_RESULT LOOP
      IF C_ROW.FLAG <> 1 THEN
        UPDATE FM_IMP_RESULT_DULP
           SET FIELD_STATE = F_STR_APPEND_IFNOTEXISTS(FIELD_STATE,
                                                      C_ROW.FIELD_STATE),
               LOG         = F_STR_APPEND_IFNOTEXISTS(LOG, C_ROW.LOG)
         WHERE PID = C_ROW.PID
           AND FLAG = 1;
      END IF;
    END LOOP;
  END;

  PROCEDURE DATAREPLACE IS
  BEGIN
    --PID���ظ�����ݣ��ֶ�ֱ���滻
    UPDATE IX_POI P
       SET (STATE, LOG, FIELD_STATE) =
           (SELECT STATE, LOG, FIELD_STATE
              FROM FM_IMP_RESULT_SINGLE F
             WHERE F.PID = P.PID)
     WHERE EXISTS
     (SELECT 1 FROM FM_IMP_RESULT_SINGLE F WHERE F.PID = P.PID);
  
    --PID�ظ�����ݣ�ȡ���ؿ����ݶ�Ӧ���ֶ�ֱ���滻
    UPDATE IX_POI P
       SET (STATE, LOG, FIELD_STATE) =
           (SELECT STATE, LOG, FIELD_STATE
              FROM FM_IMP_RESULT_DULP F
             WHERE F.PID = P.PID
               AND F.FLAG = 1)
     WHERE EXISTS (SELECT 1
              FROM FM_IMP_RESULT_DULP F
             WHERE F.PID = P.PID
               AND F.FLAG = 1);
  
    UPDATE IX_POI P
       SET P.LOG = NULL, P.FIELD_STATE = NULL, P.STATE = 0
     WHERE NOT EXISTS
     (SELECT 1 FROM FM_IMP_RESULT_DULP P1 WHERE P1.PID = P.PID)
       AND NOT EXISTS
     (SELECT 1 FROM FM_IMP_RESULT_SINGLE P2 WHERE P2.PID = P.PID);
  
  END;

  PROCEDURE REPLACE IS
  BEGIN
    CALCULATE;
    DATAREPLACE;
  
  END;

END FM_EXP_RESULT_REPLACE;
/
