WHENEVER SQLERROR CONTINUE;

-- CREATE SEQUENCE
-- CREATE DJOB_ID_SEQ
CREATE SEQUENCE JOB_ID_SEQ
MINVALUE 1
MAXVALUE 9999999999  
START WITH 1
INCREMENT BY 1
CACHE 20;
-- CREATE DB SERVER SEQUENCE
CREATE SEQUENCE DB_SERVER_SEQ
MINVALUE 1
MAXVALUE 9999999999  
START WITH 1
INCREMENT BY 1
CACHE 20;
-- CREATE DB_HUB SEQUENCE
CREATE SEQUENCE DB_SEQ
MINVALUE 1
MAXVALUE 9999999999  
START WITH 1
INCREMENT BY 1
CACHE 20;

CREATE SEQUENCE SEQ_UPLOAD
MINVALUE 1
MAXVALUE 9999999999999999999999999999
START WITH 1
INCREMENT BY 1
CACHE 20;

-- DROP SEQUENCE SYS_CONFIG_SEQ;
CREATE SEQUENCE SYS_CONFIG_SEQ
MINVALUE 1
MAXVALUE 9999999999  
START WITH 1
INCREMENT BY 1
CACHE 20;

DROP TABLE JOB_INFO CASCADE CONSTRAINTS;
CREATE TABLE JOB_INFO(
JOB_ID NUMBER(10) PRIMARY KEY,
JOB_TYPE VARCHAR2(32),
CREATE_TIME TIMESTAMP,
BEGIN_TIME TIMESTAMP,
END_TIME TIMESTAMP,
STEP_COUNT NUMBER(4),
STATUS NUMBER(2),
JOB_REQUEST CLOB,
JOB_RESPONSE CLOB,
RESULT_MSG VARCHAR2(1000),
JOB_GUID VARCHAR2(32) NOT NULL,
USER_ID NUMBER(10),
TASK_ID NUMBER(10) DEFAULT 0,
DESCP VARCHAR2(512)
);

COMMENT ON TABLE JOB_INFO IS '后台作业JOB表';
COMMENT ON COLUMN JOB_INFO.JOB_ID IS 'JOB ID';
COMMENT ON COLUMN JOB_INFO.JOB_TYPE IS 'JOB类型';
COMMENT ON COLUMN JOB_INFO.CREATE_TIME IS '创建时间';
COMMENT ON COLUMN JOB_INFO.BEGIN_TIME IS '实际开始执行时间';
COMMENT ON COLUMN JOB_INFO.END_TIME IS '执行结束时间';
COMMENT ON COLUMN JOB_INFO.STEP_COUNT IS 'job执行的总步骤数';
COMMENT ON COLUMN JOB_INFO.STATUS IS '状态,取值：1（创建），2（执行中），3（执行成功），4（执行失败）';
COMMENT ON COLUMN JOB_INFO.JOB_REQUEST IS '传入的参数';
COMMENT ON COLUMN JOB_INFO.JOB_RESPONSE IS '返回的参数';
COMMENT ON COLUMN JOB_INFO.RESULT_MSG IS '执行结果描述';
COMMENT ON COLUMN JOB_INFO.JOB_GUID IS 'job的唯一标识符';
COMMENT ON COLUMN JOB_INFO.USER_ID IS '创建人ID';
COMMENT ON COLUMN JOB_INFO.TASK_ID IS '子任务id';
COMMENT ON COLUMN JOB_INFO.DESCP IS '描述';

CREATE INDEX IDX_JOB_INFO_01 ON JOB_INFO(JOB_TYPE);
CREATE INDEX IDX_JOB_INFO_02 ON JOB_INFO(STATUS);
CREATE UNIQUE INDEX IDX_JOB_INFO_03 ON JOB_INFO(JOB_GUID);

DROP TABLE JOB_STEP CASCADE CONSTRAINTS;
CREATE TABLE JOB_STEP(
JOB_ID NUMBER(10) NOT NULL,
STEP_SEQ NUMBER(4),
STEP_MSG VARCHAR2(1000),
BEGIN_TIME TIMESTAMP,
END_TIME TIMESTAMP,
STATUS NUMBER(2),
PROGRESS NUMBER(4),
CONSTRAINT FK_JOB_STEP_JOBID FOREIGN KEY(JOB_ID) REFERENCES JOB_INFO(JOB_ID)
);

COMMENT ON TABLE JOB_STEP IS 'JOB的详细步骤信息表';
COMMENT ON COLUMN JOB_STEP.JOB_ID IS 'JOB ID';
COMMENT ON COLUMN JOB_STEP.STEP_SEQ IS '步骤序列号';
COMMENT ON COLUMN JOB_STEP.STEP_MSG IS '当前步骤处理的业务内容';
COMMENT ON COLUMN JOB_STEP.BEGIN_TIME IS '实际开始执行时间';
COMMENT ON COLUMN JOB_STEP.END_TIME IS '执行结束时间';
COMMENT ON COLUMN JOB_STEP.STATUS IS '步骤的状态,取值：1（已进入），2（已结束）';
COMMENT ON COLUMN JOB_STEP.PROGRESS IS '步骤在JOB中的占比,取值：0~100,当前步骤和状态下，占总JOB的业务处理量的百分比值';

DROP TABLE SYNC CASCADE CONSTRAINTS;
CREATE TABLE SYNC(
ID NUMBER(6) PRIMARY KEY,
SYNC_STAGE NUMBER(2),
SYNC_SOURCE VARCHAR2(200),
SYNC_TARGET VARCHAR2(200),
SYNC_TIME TIMESTAMP,
USER_ID NUMBER(10)
);

COMMENT ON TABLE SYNC IS '同步信息列表';
COMMENT ON COLUMN SYNC.ID IS '序号';
COMMENT ON COLUMN SYNC.SYNC_STAGE IS '同步阶段';
COMMENT ON COLUMN SYNC.SYNC_SOURCE IS '同步源';
COMMENT ON COLUMN SYNC.SYNC_TARGET IS '同步目标';
COMMENT ON COLUMN SYNC.SYNC_TIME IS '同步时间';
COMMENT ON COLUMN SYNC.USER_ID IS '操作员ID';

DROP TABLE DB_SERVER CASCADE CONSTRAINTS;
CREATE TABLE DB_SERVER(
SERVER_ID  NUMBER(10) PRIMARY KEY,
SERVER_TYPE VARCHAR2(32),
SERVER_IP  VARCHAR2(32),
SERVER_PORT  NUMBER(8),
SERVICE_NAME  VARCHAR2(32),
BIZ_TYPE  VARCHAR2(512),
DESCP  VARCHAR2(512)
);

COMMENT ON TABLE DB_SERVER IS '服务器ID';
COMMENT ON COLUMN DB_SERVER.SERVER_ID IS '序号';
COMMENT ON COLUMN DB_SERVER.SERVER_TYPE IS '数据库类型,ORACLE/MYSQL/HBASE/MONGODB';
COMMENT ON COLUMN DB_SERVER.SERVER_IP IS '数据库服务内网IP';
COMMENT ON COLUMN DB_SERVER.SERVER_PORT IS '数据库服务端口号';
COMMENT ON COLUMN DB_SERVER.SERVICE_NAME IS '服务器的服务名';
COMMENT ON COLUMN DB_SERVER.BIZ_TYPE IS '业务类型';
COMMENT ON COLUMN DB_SERVER.DESCP IS '描述';

DROP TABLE DB_HUB CASCADE CONSTRAINTS;
CREATE TABLE DB_HUB(
DB_ID  NUMBER(10) PRIMARY KEY,
DB_NAME VARCHAR2(64),
DB_USER_NAME  VARCHAR2(64),
DB_USER_PASSWD   VARCHAR2(64),
DB_ROLE  NUMBER(1),
TABLESPACE_NAME  VARCHAR2(64),
BIZ_TYPE  VARCHAR2(64),
SERVER_ID  NUMBER(10),
GDB_VERSION   VARCHAR2(16),
DB_STATUS   NUMBER(1),
CREATE_TIME   TIMESTAMP,
DESCP   VARCHAR2(512)
);

COMMENT ON TABLE DB_HUB IS '统一物理数据库表';
COMMENT ON COLUMN DB_HUB.DB_ID IS '数据库ID';
COMMENT ON COLUMN DB_HUB.DB_NAME IS '数据库名称';
COMMENT ON COLUMN DB_HUB.DB_USER_NAME IS '数据库用户名';
COMMENT ON COLUMN DB_HUB.DB_USER_PASSWD IS '数据库用户密码';
COMMENT ON COLUMN DB_HUB.DB_ROLE IS 'DBA用户';
COMMENT ON COLUMN DB_HUB.TABLESPACE_NAME IS '表空间';
COMMENT ON COLUMN DB_HUB.BIZ_TYPE IS '数据库的业务类';
COMMENT ON COLUMN DB_HUB.SERVER_ID IS '数据库所在的服务器ID号';
COMMENT ON COLUMN DB_HUB.GDB_VERSION IS '数据版本';
COMMENT ON COLUMN DB_HUB.DB_STATUS IS '数据库状态';
COMMENT ON COLUMN DB_HUB.CREATE_TIME IS '数据库创建时间';
COMMENT ON COLUMN DB_HUB.DESCP IS '描述';

DROP TABLE DB_REUSE CASCADE CONSTRAINTS;
CREATE TABLE DB_REUSE(
  DB_ID NUMBER(10),
  USING_STATUS NUMBER(1),
  LATEST_USED_TIME TIMESTAMP,
  CONSTRAINT FK_REUSE_DBID FOREIGN KEY (DB_ID) REFERENCES DB_HUB(DB_ID) DISABLE
);
COMMENT ON TABLE DB_REUSE IS '数据库循环利用状态表';
COMMENT ON COLUMN DB_REUSE.DB_ID IS '数据库ID';
COMMENT ON COLUMN DB_REUSE.USING_STATUS IS '是否被使用中，0-否，1-是';
COMMENT ON COLUMN DB_REUSE.LATEST_USED_TIME IS '最近一次使用时间';
CREATE INDEX IX_REUSE_DBID ON DB_REUSE(DB_ID);
CREATE INDEX IX_REUSE_USESTA ON DB_REUSE(USING_STATUS);


DROP TABLE APP_DATA_VERSION CASCADE CONSTRAINTS;
CREATE TABLE APP_DATA_VERSION(
TYPE  NUMBER(1) PRIMARY KEY,
VERSION VARCHAR2(10)
);
COMMENT ON TABLE APP_DATA_VERSION IS '数据版本表';
COMMENT ON COLUMN APP_DATA_VERSION.TYPE IS '类型，1(TIPS), 2(GDB), 3(模式图)';
COMMENT ON COLUMN APP_DATA_VERSION.VERSION IS '版本号';

DROP TABLE APP_VERSION CASCADE CONSTRAINTS;
CREATE TABLE APP_VERSION(
APP_PLATFORM  VARCHAR2(20) NOT NULL,
APP_VERSION   VARCHAR2(20) NOT NULL,
APP_NAME  VARCHAR2(30),
DOWN_URL   VARCHAR2(100),
SCAN_CODE  VARCHAR2(20),
RELEASE_DATE   TIMESTAMP,
RELEASE_NOTE  VARCHAR2(100),
APP_SIZE   NUMBER(10),
UPGRADE_LEVEL  NUMBER(2),
APP_TYPE   NUMBER(2)
);
COMMENT ON TABLE APP_VERSION IS 'APP版本表';
COMMENT ON COLUMN APP_VERSION.APP_PLATFORM IS '平台';
COMMENT ON COLUMN APP_VERSION.APP_VERSION IS '版本';
COMMENT ON COLUMN APP_VERSION.APP_NAME IS '名称';
COMMENT ON COLUMN APP_VERSION.DOWN_URL IS '下载url';
COMMENT ON COLUMN APP_VERSION.SCAN_CODE IS '扫描码';
COMMENT ON COLUMN APP_VERSION.RELEASE_DATE IS '发布时间';
COMMENT ON COLUMN APP_VERSION.RELEASE_NOTE IS '发布说明';
COMMENT ON COLUMN APP_VERSION.APP_SIZE IS '文件大小';
COMMENT ON COLUMN APP_VERSION.UPGRADE_LEVEL IS '升级等级';
COMMENT ON COLUMN APP_VERSION.APP_TYPE IS '类型';
ALTER TABLE APP_VERSION ADD CONSTRAINT PK_APP_VERSION primary key (APP_PLATFORM, APP_VERSION);


CREATE TABLE DROPBOX_UPLOAD_CHUNK
(
  UPLOAD_ID   INTEGER,
  CHUNK_NO INTEGER
);

COMMENT ON TABLE DROPBOX_UPLOAD_CHUNK IS '上传文件区块表';
CREATE INDEX IX_DROPBOX_UPLOAD_CHUNK_01 ON DROPBOX_UPLOAD_CHUNK (UPLOAD_ID);

CREATE TABLE DROPBOX_UPLOAD
(
  UPLOAD_ID     INTEGER PRIMARY KEY,
  PROGRESS   INTEGER DEFAULT 0,
  FILE_NAME  VARCHAR2(100),
  FILE_PATH  VARCHAR2(200),
  FILE_MD5   VARCHAR2(50),
  FILE_SIZE  NUMBER,
  CHUNK_SIZE NUMBER,
  START_DATE TIMESTAMP DEFAULT SYSDATE,
  END_DATE   TIMESTAMP
);
COMMENT ON TABLE DROPBOX_UPLOAD IS '上传文件表';

-- SYS_CONFIG
CREATE TABLE SYS_CONFIG  (
   CONF_ID NUMBER(10) NOT NULL,
   CONF_KEY VARCHAR2(64) NOT NULL,
   CONF_VALUE VARCHAR2(512) NOT NULL,
   CONF_DESC VARCHAR2(512),
   APP_TYPE VARCHAR2(32) NOT NULL,
   CONSTRAINT PK_SYS_CONFIG PRIMARY KEY (CONF_ID)
);
COMMENT ON TABLE SYS_CONFIG IS '系统统一配置表';
COMMENT ON COLUMN SYS_CONFIG.CONF_ID IS '配置ID';
COMMENT ON COLUMN SYS_CONFIG.CONF_KEY IS '参数名称';
COMMENT ON COLUMN SYS_CONFIG.CONF_VALUE IS '参数值';
COMMENT ON COLUMN SYS_CONFIG.CONF_DESC IS '参数用途描述';
COMMENT ON COLUMN SYS_CONFIG.APP_TYPE IS '该配置所属类型，default为所有应用类型';

-- INIT APP_DATA_VERSION
INSERT INTO APP_DATA_VERSION(TYPE, VERSION) VALUES(1,'1.0');
INSERT INTO APP_DATA_VERSION(TYPE, VERSION) VALUES(2,'1.0');
INSERT INTO APP_DATA_VERSION(TYPE, VERSION) VALUES(3,'1.0');
COMMIT;
  
-- DROP TABLE SYS_MESSAGE;
CREATE SEQUENCE SYS_MSG_SEQ
MINVALUE 1
MAXVALUE 9999999999  
START WITH 1
INCREMENT BY 1
CACHE 20;
CREATE TABLE SYS_MESSAGE(
MSG_ID NUMBER(10) NOT NULL,
MSG_TYPE NUMBER(2) NOT NULL,
MSG_CONTENT VARCHAR(4000) NOT NULL,
CREATE_TIME TIMESTAMP NOT NULL,
TARGET_USER_ID NUMBER(10) DEFAULT 0 NOT NULL,
MSG_TITLE VARCHAR2(50),
PUSH_USER_ID NUMBER(10),
CONSTRAINT PK_SYS_MSG PRIMARY KEY (MSG_ID)
);
CREATE INDEX IX_SYS_MSG_01 ON SYS_MESSAGE(CREATE_TIME);
CREATE INDEX IX_SYS_MSG_02 ON SYS_MESSAGE(TARGET_USER_ID);
COMMENT ON TABLE SYS_MESSAGE IS '系统消息表';
COMMENT ON COLUMN SYS_MESSAGE.MSG_TYPE IS '1-系统消息,2-job操作消息,3-man管理消息';
COMMENT ON COLUMN SYS_MESSAGE.TARGET_USER_ID IS '0为所有用户';
CREATE TABLE SYS_MESSAGE_READ_LOG(
MSG_ID NUMBER(10) NOT NULL,
USER_ID NUMBER(10) NOT NULL,
READ_TYPE NUMBER(2) DEFAULT 1 NOT NULL,
MSG_STATUS NUMBER(2) DEFAULT 1 NOT NULL,
CONSTRAINT PK_SYS_MSG_READLOG PRIMARY KEY(MSG_ID,USER_ID)
);

alter table SYS_MESSAGE add msg_param VARCHAR2(500);
alter table SYS_MESSAGE add push_user_name VARCHAR2(100);

EXIT;
