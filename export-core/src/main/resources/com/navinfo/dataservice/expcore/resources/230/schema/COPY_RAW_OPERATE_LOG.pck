create or replace package COPY_RAW_OPERATE_LOG is

  -- Author  : LIUQING
  -- Created : 2012/3/19 12:40:54
  -- Purpose :

  -- Public type declarations
  PROCEDURE COPY(p_scale varchar2 DEFAULT '25000');
  procedure qc_copy;

end COPY_RAW_OPERATE_LOG;
/
create or replace package body COPY_RAW_OPERATE_LOG is

    PROCEDURE COPY(p_scale varchar2 DEFAULT '25000') IS

  v_sql varchar2(4000) DEFAULT '';
  BEGIN

  v_sql := 'INSERT INTO RAW_OPERATE_LOG@VM_DB_LINK( OPERATE_LOG_ID ,OPERATE_STATE_ID ,VERSION_ID ,ID ,TASK_ID ,OPERATE_ID ,OPERATE_NAME ,INNER_ID ,TABLE_NAME ,OBJECT_NAME ,OBJECT_ID ,DML_TYPE ,GEOMETRY ,UUID ,HIS_TYPE ,REF_ID ,CHANG_COL ,OPERATE_DESC ,OPERATION_RUNTIME ,FEATURE_RID ,FEATURE_BLOB ,PREVIOUS_CONTENT ,CURRENT_CONTENT)
SELECT OPERATE_LOG_ID ,null,VERSION_ID ,ID ,TASK_ID ,OPERATE_ID ,OPERATE_NAME ,INNER_ID ,TABLE_NAME ,OBJECT_NAME ,OBJECT_ID ,DML_TYPE ,GEOMETRY ,UUID ,HIS_TYPE ,REF_ID ,CHANG_COL ,OPERATE_DESC ,OPERATION_RUNTIME ,FEATURE_RID ,FEATURE_BLOB ,PREVIOUS_CONTENT ,CURRENT_CONTENT
 FROM OPERATE_LOG WHERE nvl(OPERATE_STATE_ID,0) = 0';

 IF p_scale = '200000' THEN
    v_sql := v_sql || ' AND ( TABLE_NAME IN (''RW_LINK'', ''RW_LINK_NAME'', ''RW_NODE'', ''RW_NODE_MESH'', ''RW_FEATURE'', ''LC_FACE'', ''LC_FACE_NAME'', ''LC_FACE_TOPO'', ''LC_LINK'', ''LC_LINK_KIND'', ''LC_LINK_MESH'', ''LC_NODE'', ''LC_NODE_MESH'', ''LC_FEATURE'') OR OPERATE_NAME=''≥ÂÕª÷Ÿ≤√'' )';

  END IF;
  IF p_scale ='1000000' THEN
    v_sql := v_sql ||' AND ( TABLE_NAME IN (''IX_ANNOTATION'', ''IX_ANNOTATION_NAME'', ''IX_ANNOTATION_FLAG'', ''AD_LINK'', ''AD_LINK_MESH'', ''AD_NODE'', ''AD_NODE_MESH'', ''LC_FACE'', ''LC_FACE_NAME'', ''LC_FACE_TOPO'', ''LC_LINK'', ''LC_LINK_KIND'', ''LC_LINK_MESH'', ''LC_NODE'', ''LC_NODE_MESH'', ''LC_FEATURE'') OR OPERATE_NAME=''≥ÂÕª÷Ÿ≤√'' )';
  END IF;
  IF p_scale ='0' THEN
  v_sql := v_sql || ' AND ( TABLE_NAME IN (''LC_FACE'', ''LC_FACE_NAME'', ''LC_FACE_TOPO'', ''LC_LINK'', ''LC_LINK_KIND'', ''LC_NODE'', ''LC_NODE_MESH'', ''LC_FEATURE'') OR OPERATE_NAME=''≥ÂÕª÷Ÿ≤√'' )';

 END IF;




  EXECUTE IMMEDIATE v_sql;

    UPDATE OPERATE_LOG SET OPERATE_STATE_ID = 1 WHERE nvl(OPERATE_STATE_ID,0) = 0;
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('SET_EDIT_FLAG_BY_MESH ERROR:' || SQLERRM);

      ROLLBACK;
      RAISE;
  END;

  PROCEDURE QC_COPY IS
  BEGIN
    INSERT
    INTO RAW_OPERATE_LOG@VM_DB_LINK(
    OPERATE_LOG_ID
    ,OPERATE_STATE_ID
    ,VERSION_ID
    ,ID
    ,TASK_ID
    ,OPERATE_ID
    ,OPERATE_NAME
    ,INNER_ID
    ,TABLE_NAME
    ,OBJECT_NAME
    ,OBJECT_ID
    ,DML_TYPE
    ,GEOMETRY
    ,UUID
    ,HIS_TYPE
    ,REF_ID
    ,CHANG_COL
    ,OPERATE_DESC
    ,OPERATION_RUNTIME
    ,FEATURE_RID
    ,FEATURE_BLOB
    ,PREVIOUS_CONTENT
    ,CURRENT_CONTENT
    )
      SELECT
      OPERATE_LOG_ID
      ,null--OPERATE_STATE_ID
      ,VERSION_ID
      ,ID
      ,TASK_ID
      ,OPERATE_ID
      ,OPERATE_NAME
      ,INNER_ID
      ,TABLE_NAME
      ,OBJECT_NAME
      ,OBJECT_ID
      ,DML_TYPE
      ,GEOMETRY
      ,UUID
      ,HIS_TYPE
      ,REF_ID
      ,CHANG_COL
      ,OPERATE_DESC
      ,OPERATION_RUNTIME
      ,FEATURE_RID
      ,FEATURE_BLOB
      ,PREVIOUS_CONTENT
      ,CURRENT_CONTENT
      FROM OPERATE_LOG WHERE TABLE_NAME IN('AU_MARK','CK_EXCEPTION') and  nvl(OPERATE_STATE_ID,0) = 0 ;
    UPDATE OPERATE_LOG SET OPERATE_STATE_ID = 1 WHERE nvl(OPERATE_STATE_ID,0) = 0;
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('SET_EDIT_FLAG_BY_MESH ERROR:' || SQLERRM);

      ROLLBACK;
      RAISE;
  END;
end COPY_RAW_OPERATE_LOG;
/
