[2017-07-09 10:01:56,061]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:01:56,336] DEBUG   275[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:56,578] DEBUG   517[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:56,619] DEBUG   558[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:57,184] DEBUG  1123[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:57,208] DEBUG  1147[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:57,240]  INFO  1179[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.0.100/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=51572&side=consumer&timestamp=1499496006949 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:57,350] DEBUG  1289[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:01:57,364]  INFO  1303[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:01:57,446] DEBUG  1385[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:01:57,446] DEBUG  1385[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 10:01:57,883] DEBUG  1822[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 10:01:57,884]  INFO  1823[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 10:01:57,884] DEBUG  1823[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 10:01:57,884] DEBUG  1823[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 10:01:57,894] DEBUG  1833[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:57,920] DEBUG  1859[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:01:57,939]  INFO  1878[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,077]  INFO  2016[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,496]  INFO  2435[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,546] DEBUG  2485[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,680] DEBUG  2619[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,704] DEBUG  2643[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,890]  INFO  2829[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x7607599c, /10.8.128.38:50202 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,891]  INFO  2830[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,974] DEBUG  2913[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:58,999] DEBUG  2938[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:59,020] DEBUG  2959[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:59,066]  INFO  3005[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xa1c6063e, /10.8.128.38:50203 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:59,066]  INFO  3005[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:59,081]  INFO  3020[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:59,491] DEBUG  3430[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:01:59,497] DEBUG  3436[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 10:01:59,531] DEBUG  3470[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 10:01:59,534] ERROR  3473[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 10:01:59,534]  WARN  3473[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 10:01:59,597]  INFO  3536[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 10:01:59,597] DEBUG  3536[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 10:02:01,200]  WARN  5139[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 10:02:01,254] DEBUG  5193[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:02:01,256] DEBUG  5195[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:02:01,256] DEBUG  5195[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 10:02:01,256] DEBUG  5195[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 10:02:04,375] DEBUG  8314[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:04,376] DEBUG  8315[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:02:04,377] DEBUG  8316[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:02:04,377] DEBUG  8316[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 10:02:04,377] DEBUG  8316[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 10:02:07,462]  INFO 11401[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,465]  INFO 11404[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6420&timestamp=1499565717128], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,465]  INFO 11404[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6420&timestamp=1499565717128, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,467]  INFO 11406[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,501]  INFO 11440[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,502]  INFO 11441[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,503]  INFO 11442[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,503] DEBUG 11442[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 10:02:07,504]  INFO 11443[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 10:02:07,506] DEBUG 11445[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 10:02:07,552] DEBUG 11491[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 10:02:07,553]  INFO 11492[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50202-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,554]  INFO 11493[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x7607599c, /10.8.128.38:50202 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,556]  INFO 11495[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6420&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,558]  INFO 11497[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50203-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,559]  INFO 11498[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xa1c6063e, /10.8.128.38:50203 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,559]  INFO 11498[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,559]  INFO 11498[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,560]  INFO 11499[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6420&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,560]  INFO 11499[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6420&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:07,561]  INFO 11500[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6420&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565716792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:26,387]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:02:26,561] DEBUG   174[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:26,671] DEBUG   284[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:26,695] DEBUG   308[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:26,985] DEBUG   598[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:27,008] DEBUG   621[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:27,039]  INFO   652[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6420&side=consumer&timestamp=1499565716792 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:27,069] DEBUG   682[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:02:27,069]  INFO   682[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:02:27,144] DEBUG   757[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:02:27,145] DEBUG   758[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 10:02:27,503] DEBUG  1116[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 10:02:27,503]  INFO  1116[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 10:02:27,504] DEBUG  1117[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 10:02:27,504] DEBUG  1117[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 10:02:27,529] DEBUG  1142[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:27,556] DEBUG  1169[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:02:27,575]  INFO  1188[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:27,733]  INFO  1346[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,163]  INFO  1776[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,218] DEBUG  1831[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,290] DEBUG  1903[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,312] DEBUG  1925[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,471]  INFO  2084[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xea01500e, /10.8.128.38:50229 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,472]  INFO  2085[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,517] DEBUG  2130[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,534] DEBUG  2147[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,549] DEBUG  2162[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,602]  INFO  2215[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xe0b72e0b, /10.8.128.38:50230 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,603]  INFO  2216[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,612]  INFO  2225[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,951] DEBUG  2564[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:28,957] DEBUG  2570[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 10:02:28,994] DEBUG  2607[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 10:02:28,998] ERROR  2611[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 10:02:28,998]  WARN  2611[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 10:02:29,061]  INFO  2674[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 10:02:29,061] DEBUG  2674[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 10:02:30,800]  WARN  4413[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 10:02:30,858] DEBUG  4471[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:02:30,859] DEBUG  4472[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:02:30,859] DEBUG  4472[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 10:02:30,860] DEBUG  4473[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 10:02:34,040] DEBUG  7653[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:34,041] DEBUG  7654[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:02:34,041] DEBUG  7654[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:02:34,042] DEBUG  7655[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 10:02:34,042] DEBUG  7655[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 10:02:37,060]  INFO 10673[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,062]  INFO 10675[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6784&timestamp=1499565746970], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,063]  INFO 10676[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6784&timestamp=1499565746970, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,064]  INFO 10677[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,098]  INFO 10711[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,099]  INFO 10712[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,100]  INFO 10713[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,100] DEBUG 10713[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 10:02:37,100]  INFO 10713[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 10:02:37,101] DEBUG 10714[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 10:02:37,128] DEBUG 10741[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 10:02:37,128]  INFO 10741[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50229-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,129]  INFO 10742[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xea01500e, /10.8.128.38:50229 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,132]  INFO 10745[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,134]  INFO 10747[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50230-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,135]  INFO 10748[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xe0b72e0b, /10.8.128.38:50230 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,136]  INFO 10749[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,136]  INFO 10749[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,137]  INFO 10750[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,137]  INFO 10750[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:02:37,138]  INFO 10751[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499565746792, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:30,062]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:09:30,268] DEBUG   206[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:30,411] DEBUG   349[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:30,444] DEBUG   382[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:30,748] DEBUG   686[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:30,766] DEBUG   704[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:30,793]  INFO   731[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6784&side=consumer&timestamp=1499565746792 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:30,819] DEBUG   757[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:09:30,819]  INFO   757[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:09:30,887] DEBUG   825[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:09:30,887] DEBUG   825[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 10:09:31,235] DEBUG  1173[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 10:09:31,235]  INFO  1173[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 10:09:31,236] DEBUG  1174[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 10:09:31,236] DEBUG  1174[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 10:09:31,256] DEBUG  1194[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:31,271] DEBUG  1209[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:09:31,283]  INFO  1221[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:31,443]  INFO  1381[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:31,846]  INFO  1784[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:31,918] DEBUG  1856[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:31,996] DEBUG  1934[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,018] DEBUG  1956[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,151]  INFO  2089[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x737a06a7, /10.8.128.38:50289 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,151]  INFO  2089[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,199] DEBUG  2137[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,218] DEBUG  2156[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,231] DEBUG  2169[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,271]  INFO  2209[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xef40b2ce, /10.8.128.38:50290 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,272]  INFO  2210[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,283]  INFO  2221[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,634] DEBUG  2572[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:32,642] DEBUG  2580[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 10:09:32,679] DEBUG  2617[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 10:09:32,690] ERROR  2628[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 10:09:32,690]  WARN  2628[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 10:09:32,741]  INFO  2679[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 10:09:32,741] DEBUG  2679[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 10:09:34,379]  WARN  4317[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 10:09:34,433] DEBUG  4371[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:09:34,434] DEBUG  4372[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:09:34,434] DEBUG  4372[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 10:09:34,435] DEBUG  4373[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 10:09:38,099] DEBUG  8037[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:38,100] DEBUG  8038[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:09:38,100] DEBUG  8038[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:09:38,100] DEBUG  8038[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 10:09:38,101] DEBUG  8039[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 10:09:41,089]  INFO 11027[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,094]  INFO 11032[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6936&timestamp=1499566170734], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,094]  INFO 11032[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6936&timestamp=1499566170734, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,095]  INFO 11033[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,134]  INFO 11072[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,135]  INFO 11073[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,135]  INFO 11073[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,136] DEBUG 11074[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 10:09:41,136]  INFO 11074[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 10:09:41,137] DEBUG 11075[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 10:09:41,183] DEBUG 11121[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 10:09:41,184]  INFO 11122[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50289-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,185]  INFO 11123[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x737a06a7, /10.8.128.38:50289 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,188]  INFO 11126[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6936&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,191]  INFO 11129[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50290-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,192]  INFO 11130[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xef40b2ce, /10.8.128.38:50290 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,193]  INFO 11131[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,194]  INFO 11132[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,194]  INFO 11132[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6936&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,195]  INFO 11133[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6936&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:09:41,204]  INFO 11142[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6936&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566170539, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:35,376]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:10:35,529] DEBUG   153[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:35,654] DEBUG   278[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:35,680] DEBUG   304[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:35,954] DEBUG   578[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:35,974] DEBUG   598[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:36,000]  INFO   624[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6936&side=consumer&timestamp=1499566170539 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:36,021] DEBUG   645[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:10:36,021]  INFO   645[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:10:36,091] DEBUG   715[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:10:36,092] DEBUG   716[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 10:10:36,325] DEBUG   949[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 10:10:36,326]  INFO   950[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 10:10:36,327] DEBUG   951[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 10:10:36,327] DEBUG   951[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 10:10:36,351] DEBUG   975[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:36,393] DEBUG  1017[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:10:36,409]  INFO  1033[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:36,828]  INFO  1452[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,239]  INFO  1863[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,316] DEBUG  1940[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,415] DEBUG  2039[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,432] DEBUG  2056[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,536]  INFO  2160[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xb35c0995, /10.8.128.38:50317 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,536]  INFO  2160[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,580] DEBUG  2204[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,601] DEBUG  2225[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,615] DEBUG  2239[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,655]  INFO  2279[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xe5975ddd, /10.8.128.38:50318 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,655]  INFO  2279[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:37,666]  INFO  2290[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:38,031] DEBUG  2655[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:38,042] DEBUG  2666[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 10:10:38,080] DEBUG  2704[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 10:10:38,082] ERROR  2706[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 10:10:38,082]  WARN  2706[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 10:10:38,133]  INFO  2757[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 10:10:38,134] DEBUG  2758[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 10:10:39,695]  WARN  4319[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 10:10:39,754] DEBUG  4378[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:10:39,755] DEBUG  4379[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:10:39,755] DEBUG  4379[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 10:10:39,756] DEBUG  4380[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 10:10:42,804] DEBUG  7428[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:42,805] DEBUG  7429[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:10:42,805] DEBUG  7429[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:10:42,806] DEBUG  7430[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 10:10:42,806] DEBUG  7430[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 10:10:45,723]  INFO 10347[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,726]  INFO 10350[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7012&timestamp=1499566235941], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,727]  INFO 10351[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7012&timestamp=1499566235941, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,727]  INFO 10351[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,763]  INFO 10387[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,763]  INFO 10387[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,764]  INFO 10388[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,764] DEBUG 10388[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 10:10:45,764]  INFO 10388[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 10:10:45,765] DEBUG 10389[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 10:10:45,791] DEBUG 10415[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 10:10:45,791]  INFO 10415[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50317-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,792]  INFO 10416[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xb35c0995, /10.8.128.38:50317 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,794]  INFO 10418[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7012&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,795]  INFO 10419[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50318-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,795]  INFO 10419[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xe5975ddd, /10.8.128.38:50318 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,796]  INFO 10420[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,796]  INFO 10420[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7012&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,796]  INFO 10420[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,796]  INFO 10420[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7012&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:10:45,797]  INFO 10421[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7012&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566235777, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:45,267]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:20:45,420] DEBUG   153[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:45,536] DEBUG   269[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:45,563] DEBUG   296[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:45,856] DEBUG   589[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:45,874] DEBUG   607[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:45,901]  INFO   634[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7012&side=consumer&timestamp=1499566235777 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:45,923] DEBUG   656[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:20:45,923]  INFO   656[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:20:45,990] DEBUG   723[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:20:45,990] DEBUG   723[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 10:20:46,341] DEBUG  1074[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 10:20:46,341]  INFO  1074[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 10:20:46,342] DEBUG  1075[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 10:20:46,342] DEBUG  1075[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 10:20:46,368] DEBUG  1101[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:46,395] DEBUG  1128[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:20:46,445]  INFO  1178[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:46,581]  INFO  1314[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:46,979]  INFO  1712[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,038] DEBUG  1771[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,117] DEBUG  1850[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,135] DEBUG  1868[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,275]  INFO  2008[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xf3caa3df, /10.8.128.38:50716 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,275]  INFO  2008[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,342] DEBUG  2075[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,359] DEBUG  2092[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,375] DEBUG  2108[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,416]  INFO  2149[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x7156c9c4, /10.8.128.38:50717 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,416]  INFO  2149[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,429]  INFO  2162[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,790] DEBUG  2523[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:47,798] DEBUG  2531[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 10:20:47,840] DEBUG  2573[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 10:20:47,842] ERROR  2575[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 10:20:47,843]  WARN  2576[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 10:20:47,907]  INFO  2640[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 10:20:47,907] DEBUG  2640[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 10:20:49,537]  WARN  4270[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 10:20:49,593] DEBUG  4326[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:20:49,593] DEBUG  4326[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:20:49,594] DEBUG  4327[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 10:20:49,594] DEBUG  4327[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 10:20:52,863] DEBUG  7596[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:52,863] DEBUG  7596[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:20:52,864] DEBUG  7597[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:20:52,864] DEBUG  7597[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 10:20:52,865] DEBUG  7598[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 10:20:55,971]  INFO 10704[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:55,972]  INFO 10705[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6128&timestamp=1499566845842], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:55,972]  INFO 10705[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6128&timestamp=1499566845842, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:55,972]  INFO 10705[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,005]  INFO 10738[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,005]  INFO 10738[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,008]  INFO 10741[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,009] DEBUG 10742[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 10:20:56,009]  INFO 10742[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 10:20:56,009] DEBUG 10742[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 10:20:56,050] DEBUG 10783[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 10:20:56,051]  INFO 10784[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50716-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,051]  INFO 10784[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xf3caa3df, /10.8.128.38:50716 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,053]  INFO 10786[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6128&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,054]  INFO 10787[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50717-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,054]  INFO 10787[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x7156c9c4, /10.8.128.38:50717 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,055]  INFO 10788[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,055]  INFO 10788[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,055]  INFO 10788[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6128&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,055]  INFO 10788[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6128&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:20:56,056]  INFO 10789[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6128&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499566845664, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:21:50,195]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:21:50,410] DEBUG   215[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:21:50,530] DEBUG   335[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:21:50,555] DEBUG   360[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:21:50,939]  INFO   744[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:21:50,942]  INFO   747[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [], dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:43,387]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:23:43,549] DEBUG   162[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:43,675] DEBUG   288[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:43,700] DEBUG   313[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:43,982] DEBUG   595[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:44,004] DEBUG   617[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:44,025]  INFO   638[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6128&side=consumer&timestamp=1499566845664 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:44,044] DEBUG   657[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:23:44,044]  INFO   657[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:23:44,112] DEBUG   725[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:23:44,113] DEBUG   726[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 10:23:44,463] DEBUG  1076[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 10:23:44,464]  INFO  1077[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 10:23:44,464] DEBUG  1077[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 10:23:44,464] DEBUG  1077[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 10:23:44,490] DEBUG  1103[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:44,522] DEBUG  1135[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:23:44,536]  INFO  1149[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:44,707]  INFO  1320[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,219]  INFO  1832[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,304] DEBUG  1917[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,405] DEBUG  2018[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,434] DEBUG  2047[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,543]  INFO  2156[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x5c04ef13, /10.8.128.38:50760 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,544]  INFO  2157[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,581] DEBUG  2194[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,595] DEBUG  2208[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,612] DEBUG  2225[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,663]  INFO  2276[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xfcf7a564, /10.8.128.38:50761 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,663]  INFO  2276[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:45,678]  INFO  2291[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:46,030] DEBUG  2643[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:46,040] DEBUG  2653[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 10:23:46,070] DEBUG  2683[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 10:23:46,072] ERROR  2685[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 10:23:46,072]  WARN  2685[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 10:23:46,122]  INFO  2735[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 10:23:46,122] DEBUG  2735[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 10:23:47,764]  WARN  4377[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 10:23:47,818] DEBUG  4431[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:23:47,819] DEBUG  4432[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:23:47,819] DEBUG  4432[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 10:23:47,820] DEBUG  4433[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 10:23:50,951] DEBUG  7564[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:50,952] DEBUG  7565[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 10:23:50,953] DEBUG  7566[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 10:23:50,953] DEBUG  7566[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 10:23:50,954] DEBUG  7567[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 10:23:53,901]  INFO 10514[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,902]  INFO 10515[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6224&timestamp=1499567023968], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,903]  INFO 10516[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6224&timestamp=1499567023968, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,903]  INFO 10516[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,951]  INFO 10564[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,951]  INFO 10564[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,952]  INFO 10565[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,952] DEBUG 10565[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 10:23:53,952]  INFO 10565[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 10:23:53,953] DEBUG 10566[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 10:23:53,980] DEBUG 10593[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 10:23:53,980]  INFO 10593[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50760-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,981]  INFO 10594[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x5c04ef13, /10.8.128.38:50760 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,982]  INFO 10595[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6224&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,983]  INFO 10596[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:50761-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,984]  INFO 10597[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xfcf7a564, /10.8.128.38:50761 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,984]  INFO 10597[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6224&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,984]  INFO 10597[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,985]  INFO 10598[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,985]  INFO 10598[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6224&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:23:53,985]  INFO 10598[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6224&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499567023793, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 10:24:23,005]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:24:23,169] DEBUG   164[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:24:23,307] DEBUG   302[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:24:23,328] DEBUG   323[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:24:23,581]  INFO   576[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:24:23,583]  INFO   578[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [], dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:14,575]  INFO     1[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 10:41:14,746] DEBUG   172[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:14,871] DEBUG   297[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:14,899] DEBUG   325[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:15,191] DEBUG   617[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:15,212] DEBUG   638[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:15,238]  INFO   664[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 10:41:15,261] DEBUG   687[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 10:41:15,261]  INFO   687[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 10:41:15,323] DEBUG   749[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 10:41:15,324] DEBUG   750[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 11:50:28,468]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 11:50:28,620] DEBUG   152[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:28,738] DEBUG   270[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:28,761] DEBUG   293[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:29,194] DEBUG   726[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:29,221] DEBUG   753[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:29,260]  INFO   792[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6224&side=consumer&timestamp=1499567023793 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:29,293] DEBUG   825[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 11:50:29,321]  INFO   853[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 11:50:29,394] DEBUG   926[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 11:50:29,395] DEBUG   927[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 11:50:29,744] DEBUG  1276[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 11:50:29,745]  INFO  1277[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 11:50:29,745] DEBUG  1277[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 11:50:29,746] DEBUG  1278[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 11:50:29,773] DEBUG  1305[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:29,802] DEBUG  1334[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 11:50:29,813]  INFO  1345[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:29,959]  INFO  1491[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,366]  INFO  1898[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,439] DEBUG  1971[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,530] DEBUG  2062[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,548] DEBUG  2080[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,660]  INFO  2192[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xff3c7555, /10.8.128.38:51943 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,660]  INFO  2192[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,699] DEBUG  2231[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,719] DEBUG  2251[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,735] DEBUG  2267[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,773]  INFO  2305[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x22da616a, /10.8.128.38:51944 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,773]  INFO  2305[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:30,782]  INFO  2314[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:31,127] DEBUG  2659[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:31,137] DEBUG  2669[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 11:50:31,176] DEBUG  2708[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 11:50:31,180] ERROR  2712[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 11:50:31,180]  WARN  2712[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 11:50:31,243]  INFO  2775[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 11:50:31,244] DEBUG  2776[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 11:50:32,895]  WARN  4427[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 11:50:32,946] DEBUG  4478[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 11:50:32,947] DEBUG  4479[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 11:50:32,947] DEBUG  4479[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 11:50:32,947] DEBUG  4479[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 11:50:35,923] DEBUG  7455[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:35,924] DEBUG  7456[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 11:50:35,924] DEBUG  7456[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 11:50:35,925] DEBUG  7457[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 11:50:35,925] DEBUG  7457[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 11:50:38,686]  INFO 10218[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,687]  INFO 10219[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=5784&timestamp=1499572229177], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,688]  INFO 10220[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=5784&timestamp=1499572229177, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,691]  INFO 10223[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,734]  INFO 10266[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,735]  INFO 10267[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,736]  INFO 10268[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,737] DEBUG 10269[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 11:50:38,737]  INFO 10269[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 11:50:38,737] DEBUG 10269[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 11:50:38,763] DEBUG 10295[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 11:50:38,764]  INFO 10296[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:51943-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,764]  INFO 10296[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xff3c7555, /10.8.128.38:51943 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,766]  INFO 10298[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=5784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,768]  INFO 10300[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:51944-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,768]  INFO 10300[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x22da616a, /10.8.128.38:51944 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,769]  INFO 10301[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,769]  INFO 10301[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,769]  INFO 10301[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=5784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 11:50:38,769]  INFO 10301[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=5784&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499572228867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:37,756]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 12:26:38,005] DEBUG   249[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:38,131] DEBUG   375[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:38,159] DEBUG   403[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:38,494] DEBUG   738[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:38,518] DEBUG   762[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:38,547]  INFO   791[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=5784&side=consumer&timestamp=1499572228867 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:38,577] DEBUG   821[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 12:26:38,578]  INFO   822[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 12:26:38,636] DEBUG   880[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 12:26:38,636] DEBUG   880[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 12:26:39,035] DEBUG  1279[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 12:26:39,036]  INFO  1280[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 12:26:39,037] DEBUG  1281[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 12:26:39,037] DEBUG  1281[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 12:26:39,063] DEBUG  1307[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:39,086] DEBUG  1330[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:26:39,117]  INFO  1361[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:39,254]  INFO  1498[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:39,705]  INFO  1949[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:39,783] DEBUG  2027[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:39,857] DEBUG  2101[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:39,877] DEBUG  2121[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,010]  INFO  2254[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xa9370658, /10.8.128.38:52136 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,011]  INFO  2255[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,044] DEBUG  2288[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,060] DEBUG  2304[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,082] DEBUG  2326[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,124]  INFO  2368[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x9d33e0cb, /10.8.128.38:52137 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,124]  INFO  2368[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,135]  INFO  2379[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,514] DEBUG  2758[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:40,521] DEBUG  2765[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 12:26:40,558] DEBUG  2802[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 12:26:40,560] ERROR  2804[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 12:26:40,560]  WARN  2804[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 12:26:40,616]  INFO  2860[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 12:26:40,617] DEBUG  2861[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 12:26:42,308]  WARN  4552[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 12:26:42,420] DEBUG  4664[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 12:26:42,421] DEBUG  4665[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 12:26:42,421] DEBUG  4665[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 12:26:42,421] DEBUG  4665[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 12:26:45,631] DEBUG  7875[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:45,632] DEBUG  7876[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 12:26:45,633] DEBUG  7877[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 12:26:45,634] DEBUG  7878[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 12:26:45,634] DEBUG  7878[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 12:26:48,824]  INFO 11068[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,826]  INFO 11070[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6512&timestamp=1499574398479], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,826]  INFO 11070[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6512&timestamp=1499574398479, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,827]  INFO 11071[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,906]  INFO 11150[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,906]  INFO 11150[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,907]  INFO 11151[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,907] DEBUG 11151[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 12:26:48,907]  INFO 11151[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 12:26:48,909] DEBUG 11153[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 12:26:48,974] DEBUG 11218[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 12:26:48,974]  INFO 11218[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52136-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,974]  INFO 11218[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xa9370658, /10.8.128.38:52136 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,978]  INFO 11222[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52137-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,978]  INFO 11222[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6512&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,979]  INFO 11223[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x9d33e0cb, /10.8.128.38:52137 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,980]  INFO 11224[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,980]  INFO 11224[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,980]  INFO 11224[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6512&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,980]  INFO 11224[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6512&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:26:48,983]  INFO 11227[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6512&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574398289, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:42,416]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 12:28:42,573] DEBUG   157[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:42,687] DEBUG   271[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:42,726] DEBUG   310[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:43,144] DEBUG   728[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:43,166] DEBUG   750[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:43,197]  INFO   781[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6512&side=consumer&timestamp=1499574398289 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:43,217] DEBUG   801[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 12:28:43,217]  INFO   801[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 12:28:43,283] DEBUG   867[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 12:28:43,284] DEBUG   868[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 12:28:43,852] DEBUG  1436[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 12:28:43,853]  INFO  1437[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 12:28:43,853] DEBUG  1437[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 12:28:43,853] DEBUG  1437[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 12:28:43,882] DEBUG  1466[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:43,913] DEBUG  1497[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 12:28:43,939]  INFO  1523[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,112]  INFO  1696[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,594]  INFO  2178[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,651] DEBUG  2235[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,730] DEBUG  2314[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,748] DEBUG  2332[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,893]  INFO  2477[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x819e57a5, /10.8.128.38:52164 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,893]  INFO  2477[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,938] DEBUG  2522[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,955] DEBUG  2539[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:44,972] DEBUG  2556[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:45,012]  INFO  2596[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xeca6062e, /10.8.128.38:52165 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:45,012]  INFO  2596[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:45,025]  INFO  2609[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:45,384] DEBUG  2968[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:45,398] DEBUG  2982[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 12:28:45,443] DEBUG  3027[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 12:28:45,446] ERROR  3030[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 12:28:45,447]  WARN  3031[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 12:28:45,518]  INFO  3102[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 12:28:45,518] DEBUG  3102[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 12:28:47,144]  WARN  4728[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 12:28:47,202] DEBUG  4786[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 12:28:47,203] DEBUG  4787[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 12:28:47,204] DEBUG  4788[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 12:28:47,204] DEBUG  4788[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 12:28:50,289] DEBUG  7873[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:50,290] DEBUG  7874[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 12:28:50,290] DEBUG  7874[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 12:28:50,291] DEBUG  7875[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 12:28:50,291] DEBUG  7875[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 12:28:53,358]  INFO 10942[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,363]  INFO 10947[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7092&timestamp=1499574523129], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,363]  INFO 10947[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7092&timestamp=1499574523129, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,364]  INFO 10948[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,404]  INFO 10988[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,404]  INFO 10988[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,405]  INFO 10989[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,405] DEBUG 10989[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 12:28:53,405]  INFO 10989[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 12:28:53,406] DEBUG 10990[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 12:28:53,433] DEBUG 11017[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 12:28:53,434]  INFO 11018[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52164-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,435]  INFO 11019[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x819e57a5, /10.8.128.38:52164 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,437]  INFO 11021[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7092&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,441]  INFO 11025[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52165-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,443]  INFO 11027[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xeca6062e, /10.8.128.38:52165 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,444]  INFO 11028[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,444]  INFO 11028[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,445]  INFO 11029[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7092&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,445]  INFO 11029[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7092&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 12:28:53,446]  INFO 11030[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7092&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499574522867, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:27,154]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 14:09:27,323] DEBUG   169[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:27,441] DEBUG   287[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:27,470] DEBUG   316[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:27,753] DEBUG   599[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:27,773] DEBUG   619[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:27,801]  INFO   647[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7092&side=consumer&timestamp=1499574522867 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:27,826] DEBUG   672[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 14:09:27,845]  INFO   691[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 14:09:27,915] DEBUG   761[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 14:09:27,915] DEBUG   761[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 14:09:28,267] DEBUG  1113[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 14:09:28,268]  INFO  1114[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 14:09:28,268] DEBUG  1114[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 14:09:28,268] DEBUG  1114[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 14:09:28,293] DEBUG  1139[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:28,313] DEBUG  1159[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:09:28,328]  INFO  1174[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:28,479]  INFO  1325[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:28,876]  INFO  1722[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:28,938] DEBUG  1784[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,023] DEBUG  1869[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,042] DEBUG  1888[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,202]  INFO  2048[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x98160196, /10.8.128.38:52846 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,203]  INFO  2049[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,246] DEBUG  2092[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,261] DEBUG  2107[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,281] DEBUG  2127[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,324]  INFO  2170[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xe36491a0, /10.8.128.38:52847 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,324]  INFO  2170[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,336]  INFO  2182[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,687] DEBUG  2533[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:29,692] DEBUG  2538[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 14:09:29,723] DEBUG  2569[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 14:09:29,726] ERROR  2572[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 14:09:29,726]  WARN  2572[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 14:09:29,789]  INFO  2635[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 14:09:29,790] DEBUG  2636[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 14:09:31,343]  WARN  4189[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 14:09:31,397] DEBUG  4243[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 14:09:31,398] DEBUG  4244[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 14:09:31,398] DEBUG  4244[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 14:09:31,399] DEBUG  4245[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 14:09:34,564] DEBUG  7410[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:34,565] DEBUG  7411[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 14:09:34,565] DEBUG  7411[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 14:09:34,566] DEBUG  7412[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 14:09:34,566] DEBUG  7412[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 14:09:37,549] ERROR 10395[main] - QualityService.operateProblem(370) - 获取质检问题失败，原因为：JSONObject["classBottom"] not found.
[2017-07-09 14:09:37,564]  INFO 10410[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,566]  INFO 10412[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7768&timestamp=1499580567742], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,566]  INFO 10412[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7768&timestamp=1499580567742, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,567]  INFO 10413[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,607]  INFO 10453[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,607]  INFO 10453[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,608]  INFO 10454[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,608] DEBUG 10454[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 14:09:37,608]  INFO 10454[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 14:09:37,609] DEBUG 10455[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 14:09:37,634] DEBUG 10480[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 14:09:37,635]  INFO 10481[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52846-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,635]  INFO 10481[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x98160196, /10.8.128.38:52846 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,637]  INFO 10483[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7768&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,638]  INFO 10484[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52847-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,638]  INFO 10484[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xe36491a0, /10.8.128.38:52847 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,638]  INFO 10484[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,638]  INFO 10484[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,639]  INFO 10485[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7768&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,639]  INFO 10485[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7768&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:09:37,639]  INFO 10485[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7768&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580567567, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:18,389]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 14:10:18,552] DEBUG   163[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:18,675] DEBUG   286[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:18,699] DEBUG   310[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:19,018] DEBUG   629[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:19,055] DEBUG   666[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:19,095]  INFO   706[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7768&side=consumer&timestamp=1499580567567 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:19,144] DEBUG   755[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 14:10:19,148]  INFO   759[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 14:10:19,240] DEBUG   851[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 14:10:19,240] DEBUG   851[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 14:10:19,590] DEBUG  1201[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 14:10:19,590]  INFO  1201[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 14:10:19,591] DEBUG  1202[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 14:10:19,591] DEBUG  1202[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 14:10:19,618] DEBUG  1229[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:19,644] DEBUG  1255[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:10:19,671]  INFO  1282[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:19,810]  INFO  1421[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,213]  INFO  1824[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,294] DEBUG  1905[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,368] DEBUG  1979[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,388] DEBUG  1999[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,518]  INFO  2129[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x3d78bc7a, /10.8.128.38:52880 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,519]  INFO  2130[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,550] DEBUG  2161[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,566] DEBUG  2177[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,581] DEBUG  2192[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,622]  INFO  2233[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xca8127e3, /10.8.128.38:52881 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,622]  INFO  2233[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,637]  INFO  2248[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,984] DEBUG  2595[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:20,993] DEBUG  2604[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 14:10:21,028] DEBUG  2639[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 14:10:21,037] ERROR  2648[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 14:10:21,037]  WARN  2648[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 14:10:21,087]  INFO  2698[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 14:10:21,087] DEBUG  2698[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 14:10:22,634]  WARN  4245[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 14:10:22,687] DEBUG  4298[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 14:10:22,687] DEBUG  4298[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 14:10:22,688] DEBUG  4299[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 14:10:22,688] DEBUG  4299[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 14:10:25,684] DEBUG  7295[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:25,684] DEBUG  7295[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 14:10:25,685] DEBUG  7296[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 14:10:25,686] DEBUG  7297[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 14:10:25,686] DEBUG  7297[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 14:10:28,599] ERROR 10210[main] - QualityService.operateProblem(370) - 获取质检问题失败，原因为：JSONObject["classBottom"] not found.
[2017-07-09 14:10:28,611]  INFO 10222[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,612]  INFO 10223[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6728&timestamp=1499580618995], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,613]  INFO 10224[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6728&timestamp=1499580618995, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,613]  INFO 10224[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,644]  INFO 10255[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,644]  INFO 10255[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,645]  INFO 10256[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,645] DEBUG 10256[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 14:10:28,645]  INFO 10256[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 14:10:28,646] DEBUG 10257[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 14:10:28,671] DEBUG 10282[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 14:10:28,672]  INFO 10283[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52880-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,673]  INFO 10284[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x3d78bc7a, /10.8.128.38:52880 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,675]  INFO 10286[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6728&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,677]  INFO 10288[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52881-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,677]  INFO 10288[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xca8127e3, /10.8.128.38:52881 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,677]  INFO 10288[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,678]  INFO 10289[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,678]  INFO 10289[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6728&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,678]  INFO 10289[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6728&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:28,679]  INFO 10290[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6728&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580618802, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:10:59,815]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 14:10:59,972] DEBUG   157[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:00,088] DEBUG   273[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:00,124] DEBUG   309[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:00,424] DEBUG   609[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:00,451] DEBUG   636[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:00,483]  INFO   668[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6728&side=consumer&timestamp=1499580618802 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:00,552] DEBUG   737[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 14:11:00,552]  INFO   737[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 14:11:00,615] DEBUG   800[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 14:11:00,615] DEBUG   800[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 14:11:00,964] DEBUG  1149[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 14:11:00,965]  INFO  1150[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 14:11:00,966] DEBUG  1151[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 14:11:00,968] DEBUG  1153[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 14:11:00,993] DEBUG  1178[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:01,017] DEBUG  1202[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 14:11:01,044]  INFO  1229[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,191]  INFO  1376[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,605]  INFO  1790[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,684] DEBUG  1869[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,783] DEBUG  1968[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,802] DEBUG  1987[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,908]  INFO  2093[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xc2b04a31, /10.8.128.38:52906 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,909]  INFO  2094[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,974] DEBUG  2159[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:01,990] DEBUG  2175[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:02,005] DEBUG  2190[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:02,050]  INFO  2235[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x98cdaaae, /10.8.128.38:52907 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:02,050]  INFO  2235[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:02,062]  INFO  2247[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:02,417] DEBUG  2602[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:02,428] DEBUG  2613[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 14:11:02,461] DEBUG  2646[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 14:11:02,464] ERROR  2649[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 14:11:02,464]  WARN  2649[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 14:11:02,523]  INFO  2708[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 14:11:02,523] DEBUG  2708[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 14:11:04,190]  WARN  4375[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 14:11:04,245] DEBUG  4430[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 14:11:04,246] DEBUG  4431[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 14:11:04,246] DEBUG  4431[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 14:11:04,247] DEBUG  4432[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 14:11:07,439] DEBUG  7624[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:07,440] DEBUG  7625[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 14:11:07,441] DEBUG  7626[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 14:11:07,442] DEBUG  7627[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 14:11:07,442] DEBUG  7627[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 14:11:10,574]  INFO 10759[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,576]  INFO 10761[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7596&timestamp=1499580660406], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,576]  INFO 10761[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7596&timestamp=1499580660406, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,577]  INFO 10762[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,609]  INFO 10794[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,610]  INFO 10795[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,610]  INFO 10795[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,610] DEBUG 10795[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 14:11:10,611]  INFO 10796[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 14:11:10,612] DEBUG 10797[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 14:11:10,657] DEBUG 10842[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 14:11:10,659]  INFO 10844[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52906-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,661]  INFO 10846[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xc2b04a31, /10.8.128.38:52906 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,665]  INFO 10850[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7596&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,669]  INFO 10854[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:52907-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,670]  INFO 10855[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x98cdaaae, /10.8.128.38:52907 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,671]  INFO 10856[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,672]  INFO 10857[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,672]  INFO 10857[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7596&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 14:11:10,680]  INFO 10865[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7596&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499580660227, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:20:10,325]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:20:10,499] DEBUG   174[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:20:10,627] DEBUG   302[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:20:10,655] DEBUG   330[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:20:10,948]  INFO   623[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:20:10,951]  INFO   626[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [], dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:47,219]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:26:47,464] DEBUG   245[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:47,636] DEBUG   417[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:47,661] DEBUG   442[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:47,976] DEBUG   757[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:48,004] DEBUG   785[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:48,030]  INFO   811[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7596&side=consumer&timestamp=1499580660227 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:26:48,055] DEBUG   836[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 16:26:48,069]  INFO   850[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 16:26:48,127] DEBUG   908[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 16:26:48,127] DEBUG   908[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 16:27:48,995] DEBUG 61776[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 16:27:48,996]  INFO 61777[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 16:27:48,996] DEBUG 61777[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:27:48,996] DEBUG 61777[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 16:27:49,022] DEBUG 61803[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:27:49,044] DEBUG 61825[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:27:49,063]  INFO 61844[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,188]  INFO 61969[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,604]  INFO 62385[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,669] DEBUG 62450[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,749] DEBUG 62530[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,770] DEBUG 62551[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,901]  INFO 62682[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xe4fbb9d8, /10.8.128.38:53751 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,901]  INFO 62682[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,949] DEBUG 62730[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,967] DEBUG 62748[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:49,983] DEBUG 62764[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:50,010]  INFO 62791[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=1&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:50,390] DEBUG 63171[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:50,407] DEBUG 63188[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 16:27:50,450] DEBUG 63231[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 16:27:50,454] ERROR 63235[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 16:27:50,454]  WARN 63235[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 16:27:50,510]  INFO 63291[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 16:27:50,510] DEBUG 63291[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 16:27:52,057]  WARN 64838[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 16:27:52,111] DEBUG 64892[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:27:52,111] DEBUG 64892[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:27:52,112] DEBUG 64893[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 16:27:52,112] DEBUG 64893[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 16:27:53,600] DEBUG 66381[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:NodeChildrenChanged path:/dubbo/com.navinfo.dataservice.api.datahub.iface.DatahubApi/providers
[2017-07-09 16:27:53,601] DEBUG 66382[main-EventThread] - ZkEventThread.send(88) - New event: ZkEvent[Children of /dubbo/com.navinfo.dataservice.api.datahub.iface.DatahubApi/providers changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@d3f15bf]
[2017-07-09 16:27:53,601] DEBUG 66382[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:27:53,602] DEBUG 66383[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(69) - Delivering event #1 ZkEvent[Children of /dubbo/com.navinfo.dataservice.api.datahub.iface.DatahubApi/providers changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@d3f15bf]
[2017-07-09 16:27:53,719]  INFO 66500[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:53,771]  INFO 66552[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xd28124b3, /10.8.128.38:53755 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:53,772]  INFO 66553[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:53,775] DEBUG 66556[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(79) - Delivering event #1 done
[2017-07-09 16:27:55,193] DEBUG 67974[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:55,195] DEBUG 67976[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:27:55,196] DEBUG 67977[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:27:55,196] DEBUG 67977[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 16:27:55,197] DEBUG 67978[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 16:27:58,115] ERROR 70896[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：无效的列类型 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP",PROVINCE,CITY,SUBTASK_ID,"LEVEL",MESH_ID,POI_NUM,KIND_CODE,CLASS_TOP,CLASS_MEDIUM,CLASS_BOTTOM,PROBLEM_TYPE,PROBLEM_PHENOMENON,PROBLEM_DESCRIPTION,INITIAL_CAUSE,ROOT_CAUSE,COLLECTOR_USER,COLLECTOR_TIME,CHECK_MODE,CONFIRM_USER,"version",PROBLEM_LEVEL,MEMO,PROBLEM_NUM,CHECK_USER,CHECK_TIME,MODIFY_DATE,MODIFY_USER,MEMO_USER) VALUES ( ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,) Parameters: [[队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, 2d0b8b004e13434ba76cfb3b85619f97, 0, 2017-07-09 16:27:57.979, 2017-07-09 16:27:57.979, 0, 3]]
[2017-07-09 16:27:58,126]  INFO 70907[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,127]  INFO 70908[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6664&timestamp=1499588807960], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,127]  INFO 70908[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6664&timestamp=1499588807960, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,128]  INFO 70909[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,163]  INFO 70944[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,164]  INFO 70945[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,164]  INFO 70945[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,164] DEBUG 70945[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 16:27:58,166]  INFO 70947[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 16:27:58,167] DEBUG 70948[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 16:27:58,193] DEBUG 70974[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 16:27:58,194]  INFO 70975[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:53751-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,194]  INFO 70975[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xe4fbb9d8, /10.8.128.38:53751 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,196]  INFO 70977[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6664&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,197]  INFO 70978[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:53755-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,197]  INFO 70978[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xd28124b3, /10.8.128.38:53755 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,198]  INFO 70979[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,198]  INFO 70979[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,198]  INFO 70979[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6664&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:27:58,198]  INFO 70979[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6664&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499588807765, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:57,037]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:32:57,199] DEBUG   162[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:57,320] DEBUG   283[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:57,359] DEBUG   322[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:57,808] DEBUG   771[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:57,834] DEBUG   797[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:57,865]  INFO   828[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6664&side=consumer&timestamp=1499588807765 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:57,886] DEBUG   849[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 16:32:57,886]  INFO   849[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 16:32:57,958] DEBUG   921[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 16:32:57,958] DEBUG   921[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 16:32:58,325] DEBUG  1288[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 16:32:58,326]  INFO  1289[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 16:32:58,327] DEBUG  1290[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:32:58,328] DEBUG  1291[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 16:32:58,353] DEBUG  1316[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:58,381] DEBUG  1344[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:32:58,396]  INFO  1359[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:58,510]  INFO  1473[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:58,915]  INFO  1878[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,013] DEBUG  1976[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,089] DEBUG  2052[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,112] DEBUG  2075[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,212]  INFO  2175[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x0dd24f9b, /10.8.128.38:53783 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,212]  INFO  2175[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,252] DEBUG  2215[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,268] DEBUG  2231[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,286] DEBUG  2249[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,326]  INFO  2289[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x41ec9e5d, /10.8.128.38:53784 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,327]  INFO  2290[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,339]  INFO  2302[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,703] DEBUG  2666[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:32:59,714] DEBUG  2677[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 16:32:59,754] DEBUG  2717[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 16:32:59,756] ERROR  2719[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 16:32:59,757]  WARN  2720[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 16:32:59,813]  INFO  2776[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 16:32:59,813] DEBUG  2776[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 16:33:01,477]  WARN  4440[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 16:33:01,531] DEBUG  4494[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:33:01,531] DEBUG  4494[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:33:01,532] DEBUG  4495[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 16:33:01,532] DEBUG  4495[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 16:33:04,761] DEBUG  7724[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:04,762] DEBUG  7725[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:33:04,763] DEBUG  7726[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:33:04,764] DEBUG  7727[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 16:33:04,764] DEBUG  7727[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 16:33:07,847] ERROR 10810[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：无效的列类型 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP",PROVINCE,CITY,SUBTASK_ID,"LEVEL",MESH_ID,POI_NUM,KIND_CODE,CLASS_TOP,CLASS_MEDIUM,CLASS_BOTTOM,PROBLEM_TYPE,PROBLEM_PHENOMENON,PROBLEM_DESCRIPTION,INITIAL_CAUSE,ROOT_CAUSE,COLLECTOR_USER,COLLECTOR_TIME,CHECK_MODE,CONFIRM_USER,"VERSION",PROBLEM_LEVEL,MEMO,PROBLEM_NUM,CHECK_USER,CHECK_TIME,MODIFY_DATE,MODIFY_USER,MEMO_USER) VALUES ( ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,) Parameters: [[队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, 934d214cf5a04689805c07cc55627635, 0, 2017-07-09 16:33:07.718, 2017-07-09 16:33:07.718, 0, 3]]
[2017-07-09 16:33:07,859]  INFO 10822[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,861]  INFO 10824[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7700&timestamp=1499589177789], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,861]  INFO 10824[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=7700&timestamp=1499589177789, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,862]  INFO 10825[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,896]  INFO 10859[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,896]  INFO 10859[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,897]  INFO 10860[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,897] DEBUG 10860[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 16:33:07,898]  INFO 10861[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 16:33:07,900] DEBUG 10863[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 16:33:07,926] DEBUG 10889[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 16:33:07,927]  INFO 10890[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:53783-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,928]  INFO 10891[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x0dd24f9b, /10.8.128.38:53783 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,930]  INFO 10893[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:53784-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,931]  INFO 10894[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7700&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,932]  INFO 10895[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x41ec9e5d, /10.8.128.38:53784 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,933]  INFO 10896[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,933]  INFO 10896[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,933]  INFO 10896[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7700&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,933]  INFO 10896[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7700&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:33:07,936]  INFO 10899[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=7700&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589177494, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:55,787]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:40:55,948] DEBUG   161[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:56,077] DEBUG   290[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:56,101] DEBUG   314[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:56,519] DEBUG   732[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:56,544] DEBUG   757[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:56,577]  INFO   790[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=7700&side=consumer&timestamp=1499589177494 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:56,606] DEBUG   819[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 16:40:56,613]  INFO   826[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 16:40:56,682] DEBUG   895[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 16:40:56,683] DEBUG   896[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 16:40:57,026] DEBUG  1239[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 16:40:57,026]  INFO  1239[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 16:40:57,026] DEBUG  1239[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:40:57,026] DEBUG  1239[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 16:40:57,043] DEBUG  1256[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:57,066] DEBUG  1279[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:40:57,084]  INFO  1297[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,229]  INFO  1442[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,674]  INFO  1887[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,757] DEBUG  1970[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,851] DEBUG  2064[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,872] DEBUG  2085[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,977]  INFO  2190[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xdb467613, /10.8.128.38:53839 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:57,977]  INFO  2190[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,024] DEBUG  2237[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,039] DEBUG  2252[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,056] DEBUG  2269[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,095]  INFO  2308[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xa3ce5ebf, /10.8.128.38:53840 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,095]  INFO  2308[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,109]  INFO  2322[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,496] DEBUG  2709[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:40:58,509] DEBUG  2722[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 16:40:58,539] DEBUG  2752[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 16:40:58,541] ERROR  2754[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 16:40:58,542]  WARN  2755[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 16:40:58,593]  INFO  2806[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 16:40:58,593] DEBUG  2806[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 16:41:00,153]  WARN  4366[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 16:41:00,207] DEBUG  4420[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:41:00,208] DEBUG  4421[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:41:00,208] DEBUG  4421[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 16:41:00,209] DEBUG  4422[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 16:41:03,198] DEBUG  7411[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:03,199] DEBUG  7412[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:41:03,200] DEBUG  7413[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:41:03,200] DEBUG  7413[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 16:41:03,200] DEBUG  7413[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 16:41:06,137] ERROR 10350[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：无效的列类型 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP",PROVINCE,CITY,SUBTASK_ID,"LEVEL",MESH_ID,POI_NUM,KIND_CODE,CLASS_TOP,CLASS_MEDIUM,CLASS_BOTTOM,PROBLEM_TYPE,PROBLEM_PHENOMENON,PROBLEM_DESCRIPTION,INITIAL_CAUSE,ROOT_CAUSE,COLLECTOR_USER,COLLECTOR_TIME,CHECK_MODE,CONFIRM_USER,"VERSION",PROBLEM_LEVEL,MEMO,PROBLEM_NUM,CHECK_USER,CHECK_TIME,MODIFY_DATE,MODIFY_USER,MEMO_USER) VALUES ( ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,) Parameters: [[队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, 7232538f79bd44a795a79cca9fff8d48, 0, 2017-07-09 16:41:06.009, 2017-07-09 16:41:06.009, 0, 3]]
[2017-07-09 16:41:06,188]  INFO 10401[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,189]  INFO 10402[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=3436&timestamp=1499589656503], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,189]  INFO 10402[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=3436&timestamp=1499589656503, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,189]  INFO 10402[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,217]  INFO 10430[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,217]  INFO 10430[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,218]  INFO 10431[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,218] DEBUG 10431[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 16:41:06,218]  INFO 10431[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 16:41:06,219] DEBUG 10432[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 16:41:06,253] DEBUG 10466[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 16:41:06,254]  INFO 10467[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:53839-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,256]  INFO 10469[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xdb467613, /10.8.128.38:53839 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,259]  INFO 10472[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=3436&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,262]  INFO 10475[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:53840-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,263]  INFO 10476[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xa3ce5ebf, /10.8.128.38:53840 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,264]  INFO 10477[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,264]  INFO 10477[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=3436&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,264]  INFO 10477[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,266]  INFO 10479[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=3436&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:41:06,267]  INFO 10480[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=3436&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499589656212, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:42,962]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:46:43,116] DEBUG   154[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:43,253] DEBUG   291[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:43,282] DEBUG   320[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:43,650] DEBUG   688[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:43,683] DEBUG   721[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:43,715]  INFO   753[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=3436&side=consumer&timestamp=1499589656212 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:43,738] DEBUG   776[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 16:46:43,738]  INFO   776[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 16:46:43,800] DEBUG   838[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 16:46:43,801] DEBUG   839[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 16:46:44,150] DEBUG  1188[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 16:46:44,151]  INFO  1189[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 16:46:44,151] DEBUG  1189[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:46:44,152] DEBUG  1190[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 16:46:44,177] DEBUG  1215[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:44,206] DEBUG  1244[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:46:44,239]  INFO  1277[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:44,415]  INFO  1453[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,116]  INFO  2154[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,181] DEBUG  2219[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,274] DEBUG  2312[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,301] DEBUG  2339[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,446]  INFO  2484[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x319f41e5, /10.8.128.38:54242 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,446]  INFO  2484[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,499] DEBUG  2537[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,516] DEBUG  2554[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,531] DEBUG  2569[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,572]  INFO  2610[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x678c7ba4, /10.8.128.38:54243 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,572]  INFO  2610[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,584]  INFO  2622[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,949] DEBUG  2987[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:45,959] DEBUG  2997[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 16:46:45,996] DEBUG  3034[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 16:46:45,998] ERROR  3036[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 16:46:45,999]  WARN  3037[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 16:46:46,062]  INFO  3100[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 16:46:46,063] DEBUG  3101[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 16:46:47,711]  WARN  4749[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 16:46:47,766] DEBUG  4804[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:46:47,767] DEBUG  4805[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:46:47,767] DEBUG  4805[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 16:46:47,768] DEBUG  4806[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 16:46:50,922] DEBUG  7960[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:50,923] DEBUG  7961[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:46:50,924] DEBUG  7962[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:46:50,924] DEBUG  7962[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 16:46:50,925] DEBUG  7963[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 16:46:54,078] ERROR 11116[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：ORA-00936: 缺失表达式
 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP",PROVINCE,CITY,SUBTASK_ID,"LEVEL",MESH_ID,POI_NUM,KIND_CODE,CLASS_TOP,CLASS_MEDIUM,CLASS_BOTTOM,PROBLEM_TYPE,PROBLEM_PHENOMENON,PROBLEM_DESCRIPTION,INITIAL_CAUSE,ROOT_CAUSE,COLLECTOR_USER,COLLECTOR_TIME,CHECK_MODE,CONFIRM_USER,"VERSION",PROBLEM_LEVEL,MEMO,PROBLEM_NUM,CHECK_USER,CHECK_TIME,MODIFY_DATE,MODIFY_USER,MEMO_USER) VALUES ( ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,) Parameters: [队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, 60a8bc912c364bf99050652f8bf5b858, 0, 2017-07-09 16:46:53.633, 2017-07-09 16:46:53.633, 0, 3]
[2017-07-09 16:46:54,091]  INFO 11129[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,093]  INFO 11131[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6392&timestamp=1499590003620], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,094]  INFO 11132[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6392&timestamp=1499590003620, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,094]  INFO 11132[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,127]  INFO 11165[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,128]  INFO 11166[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,128]  INFO 11166[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,128] DEBUG 11166[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 16:46:54,129]  INFO 11167[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 16:46:54,130] DEBUG 11168[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 16:46:54,180] DEBUG 11218[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 16:46:54,181]  INFO 11219[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54242-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,181]  INFO 11219[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x319f41e5, /10.8.128.38:54242 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,183]  INFO 11221[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6392&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,184]  INFO 11222[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54243-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,184]  INFO 11222[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x678c7ba4, /10.8.128.38:54243 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,185]  INFO 11223[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,185]  INFO 11223[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,185]  INFO 11223[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6392&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,185]  INFO 11223[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6392&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:46:54,185]  INFO 11223[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6392&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590003378, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:02,177]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:52:02,337] DEBUG   160[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:02,460] DEBUG   283[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:02,493] DEBUG   316[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:02,898] DEBUG   721[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:02,931] DEBUG   754[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:02,975]  INFO   798[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6392&side=consumer&timestamp=1499590003378 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:03,014] DEBUG   837[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 16:52:03,018]  INFO   841[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 16:52:03,103] DEBUG   926[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 16:52:03,104] DEBUG   927[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 16:52:03,453] DEBUG  1276[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 16:52:03,453]  INFO  1276[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 16:52:03,458] DEBUG  1281[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:52:03,458] DEBUG  1281[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 16:52:03,483] DEBUG  1306[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:03,512] DEBUG  1335[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:52:03,529]  INFO  1352[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:03,682]  INFO  1505[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,103]  INFO  1926[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,183] DEBUG  2006[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,269] DEBUG  2092[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,287] DEBUG  2110[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,404]  INFO  2227[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x3e2adbb9, /10.8.128.38:54277 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,404]  INFO  2227[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,454] DEBUG  2277[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,469] DEBUG  2292[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,486] DEBUG  2309[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,529]  INFO  2352[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x507c6974, /10.8.128.38:54278 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,529]  INFO  2352[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,541]  INFO  2364[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,910] DEBUG  2733[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:04,921] DEBUG  2744[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 16:52:04,958] DEBUG  2781[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 16:52:04,961] ERROR  2784[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 16:52:04,961]  WARN  2784[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 16:52:05,017]  INFO  2840[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 16:52:05,018] DEBUG  2841[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 16:52:06,444]  WARN  4267[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 16:52:06,499] DEBUG  4322[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:52:06,499] DEBUG  4322[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:52:06,500] DEBUG  4323[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 16:52:06,500] DEBUG  4323[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 16:52:09,654] DEBUG  7477[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:09,655] DEBUG  7478[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:52:09,656] DEBUG  7479[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:52:09,656] DEBUG  7479[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 16:52:09,657] DEBUG  7480[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 16:52:12,889] ERROR 10712[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：ORA-01747: user.table.column, table.column 或列说明无效
 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP" , PROVINCE , CITY , SUBTASK_ID , "LEVEL" , MESH_ID , POI_NUM , KIND_CODE , CLASS_TOP , CLASS_MEDIUM , CLASS_BOTTOM , PROBLEM_TYPE , PROBLEM_PHENOMENON , PROBLEM_DESCRIPTION , INITIAL_CAUSE , ROOT_CAUSE , COLLECTOR_USER , COLLECTOR_TIME , CHECK_MODE , CONFIRM_USER , "VERSION" , PROBLEM_LEVEL , MEMO , PROBLEM_NUM , CHECK_USER , CHECK_TIME , MODIFY_DATE , MODIFY_USER , MEMO_USER ,) VALUES ( ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,) Parameters: [队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, e4846d850641418aa058e91c7f481321, 0, 2017-07-09 16:52:12.442, 2017-07-09 16:52:12.442, 0, 3]
[2017-07-09 16:52:12,901]  INFO 10724[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,903]  INFO 10726[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4732&timestamp=1499590322877], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,903]  INFO 10726[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4732&timestamp=1499590322877, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,904]  INFO 10727[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,938]  INFO 10761[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,938]  INFO 10761[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,939]  INFO 10762[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,939] DEBUG 10762[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 16:52:12,939]  INFO 10762[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 16:52:12,941] DEBUG 10764[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 16:52:12,970] DEBUG 10793[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 16:52:12,970]  INFO 10793[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54277-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,972]  INFO 10795[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x3e2adbb9, /10.8.128.38:54277 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,973]  INFO 10796[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4732&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,974]  INFO 10797[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54278-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,975]  INFO 10798[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x507c6974, /10.8.128.38:54278 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,975]  INFO 10798[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,975]  INFO 10798[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,975]  INFO 10798[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4732&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,975]  INFO 10798[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4732&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:52:12,976]  INFO 10799[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4732&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590322618, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:08,978]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 16:54:09,135] DEBUG   157[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:09,261] DEBUG   283[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:09,288] DEBUG   310[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:09,573] DEBUG   595[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:09,598] DEBUG   620[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:09,625]  INFO   647[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4732&side=consumer&timestamp=1499590322618 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:09,650] DEBUG   672[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 16:54:09,656]  INFO   678[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 16:54:09,723] DEBUG   745[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 16:54:09,724] DEBUG   746[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 16:54:10,076] DEBUG  1098[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 16:54:10,077]  INFO  1099[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 16:54:10,077] DEBUG  1099[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 16:54:10,079] DEBUG  1101[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 16:54:10,101] DEBUG  1123[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:10,127] DEBUG  1149[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 16:54:10,152]  INFO  1174[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,298]  INFO  1320[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,699]  INFO  1721[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,782] DEBUG  1804[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,863] DEBUG  1885[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,883] DEBUG  1905[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,996]  INFO  2018[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x41199953, /10.8.128.38:54334 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:10,996]  INFO  2018[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,029] DEBUG  2051[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,047] DEBUG  2069[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,062] DEBUG  2084[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,101]  INFO  2123[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xc3e67b14, /10.8.128.38:54335 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,102]  INFO  2124[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,113]  INFO  2135[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,471] DEBUG  2493[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:11,480] DEBUG  2502[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 16:54:11,516] DEBUG  2538[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 16:54:11,518] ERROR  2540[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 16:54:11,519]  WARN  2541[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 16:54:11,570]  INFO  2592[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 16:54:11,571] DEBUG  2593[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 16:54:13,120]  WARN  4142[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 16:54:13,174] DEBUG  4196[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:54:13,174] DEBUG  4196[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:54:13,175] DEBUG  4197[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 16:54:13,175] DEBUG  4197[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 16:54:16,361] DEBUG  7383[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:16,362] DEBUG  7384[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 16:54:16,363] DEBUG  7385[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 16:54:16,363] DEBUG  7385[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 16:54:16,364] DEBUG  7386[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 16:54:19,556] ERROR 10578[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：ORA-01747: user.table.column, table.column 或列说明无效
 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP" , PROVINCE , CITY , SUBTASK_ID , "LEVEL" , MESH_ID , POI_NUM , KIND_CODE , CLASS_TOP , CLASS_MEDIUM , CLASS_BOTTOM , PROBLEM_TYPE , PROBLEM_PHENOMENON , PROBLEM_DESCRIPTION , INITIAL_CAUSE , ROOT_CAUSE , COLLECTOR_USER , COLLECTOR_TIME , CHECK_MODE , CONFIRM_USER , "VERSION" , PROBLEM_LEVEL , MEMO , PROBLEM_NUM , CHECK_USER , CHECK_TIME , MODIFY_DATE , MODIFY_USER , MEMO_USER ,) VALUES ( ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,  ? ,) Parameters: [队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, 19f4ed60b0894c218a22dddbd6f068e4, 0, 2017-07-09 16:54:19.106, 2017-07-09 16:54:19.106, 0, 3]
[2017-07-09 16:54:19,569]  INFO 10591[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,573]  INFO 10595[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=1368&timestamp=1499590449560], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,574]  INFO 10596[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=1368&timestamp=1499590449560, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,575]  INFO 10597[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,606]  INFO 10628[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,606]  INFO 10628[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,606]  INFO 10628[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,607] DEBUG 10629[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 16:54:19,607]  INFO 10629[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 16:54:19,608] DEBUG 10630[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 16:54:19,633] DEBUG 10655[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 16:54:19,634]  INFO 10656[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54334-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,634]  INFO 10656[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x41199953, /10.8.128.38:54334 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,636]  INFO 10658[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1368&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,637]  INFO 10659[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54335-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,637]  INFO 10659[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xc3e67b14, /10.8.128.38:54335 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,638]  INFO 10660[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,638]  INFO 10660[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,638]  INFO 10660[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1368&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,638]  INFO 10660[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1368&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 16:54:19,639]  INFO 10661[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1368&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499590449379, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:31,129]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:26:31,349] DEBUG   220[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:31,467] DEBUG   338[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:31,493] DEBUG   364[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:31,782] DEBUG   653[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:31,812] DEBUG   683[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:31,841]  INFO   712[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1368&side=consumer&timestamp=1499590449379 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:31,878] DEBUG   749[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:26:31,883]  INFO   754[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:26:31,962] DEBUG   833[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:26:31,963] DEBUG   834[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:26:32,311] DEBUG  1182[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:26:32,313]  INFO  1184[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:26:32,313] DEBUG  1184[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:26:32,314] DEBUG  1185[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:26:32,338] DEBUG  1209[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:32,364] DEBUG  1235[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:26:32,380]  INFO  1251[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:32,539]  INFO  1410[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:32,950]  INFO  1821[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,005] DEBUG  1876[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,095] DEBUG  1966[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,119] DEBUG  1990[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,277]  INFO  2148[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x6ded96e5, /10.8.128.38:54652 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,278]  INFO  2149[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,328] DEBUG  2199[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,344] DEBUG  2215[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,362] DEBUG  2233[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,401]  INFO  2272[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xdc80e65d, /10.8.128.38:54653 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,401]  INFO  2272[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,413]  INFO  2284[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,772] DEBUG  2643[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:33,782] DEBUG  2653[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:26:33,813] DEBUG  2684[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:26:33,819] ERROR  2690[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:26:33,819]  WARN  2690[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:26:33,873]  INFO  2744[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:26:33,873] DEBUG  2744[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:26:35,419]  WARN  4290[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:26:35,472] DEBUG  4343[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:26:35,473] DEBUG  4344[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:26:35,473] DEBUG  4344[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 17:26:35,474] DEBUG  4345[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 17:26:38,697] DEBUG  7568[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:38,698] DEBUG  7569[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:26:38,698] DEBUG  7569[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:26:38,699] DEBUG  7570[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:26:38,699] DEBUG  7570[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:26:42,058] ERROR 10929[main] - QualityService.operateProblem(567) - 获取质检问题失败，原因为：ORA-12899: 列 "FM_QUALITY_CHECK"."POI_PROBLEM_SUMMARY"."LEVEL" 的值太大 (实际值: 4, 最大值: 2)
 Query: INSERT INTO POI_PROBLEM_SUMMARY ("GROUP" ,PROVINCE ,CITY ,SUBTASK_ID ,"LEVEL" ,MESH_ID ,POI_NUM ,KIND_CODE ,CLASS_TOP ,CLASS_MEDIUM ,CLASS_BOTTOM ,PROBLEM_TYPE ,PROBLEM_PHENOMENON ,PROBLEM_DESCRIPTION ,INITIAL_CAUSE ,ROOT_CAUSE ,COLLECTOR_USER ,COLLECTOR_TIME ,CHECK_MODE ,CONFIRM_USER ,"VERSION" ,PROBLEM_LEVEL ,MEMO ,PROBLEM_NUM ,CHECK_USER ,CHECK_TIME ,MODIFY_DATE ,MODIFY_USER ,MEMO_USER ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) Parameters: [队名, 北京市, 北京市, 174, 设施类别, 666666, IDCode设施id, 分类代码, 大分类, 中分类, 小分类, 问题分类, 问题现象, 问题描述, 初步原因, 深度原因, AAA, 2016-06-06 00:00:00.0, 质检方式, 确认人, 版本号, 问题等级, 备注, 9df359d3c207405bb44a2b53a22a995f, 0, 2017-07-09 17:26:41.589, 2017-07-09 17:26:41.589, 0, 3]
[2017-07-09 17:26:42,070]  INFO 10941[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,071]  INFO 10942[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4260&timestamp=1499592391767], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,072]  INFO 10943[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4260&timestamp=1499592391767, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,072]  INFO 10943[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,123]  INFO 10994[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,124]  INFO 10995[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,124]  INFO 10995[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,124] DEBUG 10995[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:26:42,124]  INFO 10995[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:26:42,125] DEBUG 10996[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:26:42,171] DEBUG 11042[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:26:42,172]  INFO 11043[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54652-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,172]  INFO 11043[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x6ded96e5, /10.8.128.38:54652 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,175]  INFO 11046[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4260&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,176]  INFO 11047[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54653-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,176]  INFO 11047[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xdc80e65d, /10.8.128.38:54653 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,177]  INFO 11048[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,177]  INFO 11048[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4260&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,177]  INFO 11048[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,177]  INFO 11048[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4260&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:26:42,177]  INFO 11048[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4260&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592391586, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:08,788]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:27:08,949] DEBUG   161[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,074] DEBUG   286[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,103] DEBUG   315[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,399] DEBUG   611[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,423] DEBUG   635[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,452]  INFO   664[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4260&side=consumer&timestamp=1499592391586 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,478] DEBUG   690[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:27:09,478]  INFO   690[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:27:09,547] DEBUG   759[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:27:09,547] DEBUG   759[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:27:09,894] DEBUG  1106[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:27:09,895]  INFO  1107[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:27:09,895] DEBUG  1107[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:27:09,896] DEBUG  1108[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:27:09,918] DEBUG  1130[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,952] DEBUG  1164[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:27:09,977]  INFO  1189[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,130]  INFO  1342[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,546]  INFO  1758[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,615] DEBUG  1827[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,680] DEBUG  1892[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,698] DEBUG  1910[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,849]  INFO  2061[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x15cc8158, /10.8.128.38:54680 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,850]  INFO  2062[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,929] DEBUG  2141[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,948] DEBUG  2160[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:10,968] DEBUG  2180[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:11,009]  INFO  2221[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x018640d8, /10.8.128.38:54681 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:11,010]  INFO  2222[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:11,020]  INFO  2232[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:11,380] DEBUG  2592[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:11,395] DEBUG  2607[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:27:11,447] DEBUG  2659[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:27:11,449] ERROR  2661[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:27:11,449]  WARN  2661[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:27:11,506]  INFO  2718[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:27:11,507] DEBUG  2719[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:27:13,072]  WARN  4284[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:27:13,127] DEBUG  4339[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:27:13,128] DEBUG  4340[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:27:13,128] DEBUG  4340[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 17:27:13,129] DEBUG  4341[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 17:27:16,270] DEBUG  7482[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:16,272] DEBUG  7484[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:27:16,272] DEBUG  7484[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:27:16,273] DEBUG  7485[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:27:16,273] DEBUG  7485[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:27:19,452]  INFO 10664[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,455]  INFO 10667[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4556&timestamp=1499592429386], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,455]  INFO 10667[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4556&timestamp=1499592429386, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,456]  INFO 10668[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,489]  INFO 10701[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,489]  INFO 10701[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,490]  INFO 10702[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,490] DEBUG 10702[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:27:19,491]  INFO 10703[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:27:19,492] DEBUG 10704[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:27:19,518] DEBUG 10730[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:27:19,518]  INFO 10730[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54680-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,519]  INFO 10731[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x15cc8158, /10.8.128.38:54680 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,521]  INFO 10733[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4556&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,522]  INFO 10734[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54681-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,523]  INFO 10735[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x018640d8, /10.8.128.38:54681 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,523]  INFO 10735[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,523]  INFO 10735[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,523]  INFO 10735[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4556&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:27:19,524]  INFO 10736[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4556&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592429202, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:20,642]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:28:20,800] DEBUG   158[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:20,919] DEBUG   277[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:20,950] DEBUG   308[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:21,242] DEBUG   600[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:21,264] DEBUG   622[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:21,292]  INFO   650[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4556&side=consumer&timestamp=1499592429202 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:21,312] DEBUG   670[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:28:21,312]  INFO   670[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:28:21,377] DEBUG   735[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:28:21,377] DEBUG   735[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:28:21,726] DEBUG  1084[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:28:21,727]  INFO  1085[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:28:21,727] DEBUG  1085[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:28:21,728] DEBUG  1086[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:28:21,753] DEBUG  1111[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:21,772] DEBUG  1130[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:28:21,785]  INFO  1143[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:21,905]  INFO  1263[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,334]  INFO  1692[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,419] DEBUG  1777[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,499] DEBUG  1857[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,520] DEBUG  1878[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,642]  INFO  2000[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x0220288b, /10.8.128.38:54707 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,643]  INFO  2001[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,687] DEBUG  2045[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,702] DEBUG  2060[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,724] DEBUG  2082[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,771]  INFO  2129[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x6689d55d, /10.8.128.38:54708 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,772]  INFO  2130[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:22,788]  INFO  2146[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:23,152] DEBUG  2510[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:23,159] DEBUG  2517[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:28:23,199] DEBUG  2557[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:28:23,204] ERROR  2562[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:28:23,204]  WARN  2562[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:28:23,279]  INFO  2637[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:28:23,280] DEBUG  2638[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:28:24,858]  WARN  4216[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:28:24,913] DEBUG  4271[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:28:24,914] DEBUG  4272[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:28:24,915] DEBUG  4273[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 17:28:24,915] DEBUG  4273[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 17:28:28,003] DEBUG  7361[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:28,004] DEBUG  7362[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:28:28,005] DEBUG  7363[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:28:28,005] DEBUG  7363[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:28:28,006] DEBUG  7364[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:28:30,740]  INFO 10098[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,741]  INFO 10099[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=2416&timestamp=1499592501231], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,742]  INFO 10100[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=2416&timestamp=1499592501231, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,742]  INFO 10100[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,777]  INFO 10135[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,778]  INFO 10136[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,778]  INFO 10136[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,779] DEBUG 10137[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:28:30,780]  INFO 10138[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:28:30,781] DEBUG 10139[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:28:30,807] DEBUG 10165[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:28:30,808]  INFO 10166[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54707-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,808]  INFO 10166[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x0220288b, /10.8.128.38:54707 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,810]  INFO 10168[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2416&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,810]  INFO 10168[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54708-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,811]  INFO 10169[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x6689d55d, /10.8.128.38:54708 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,811]  INFO 10169[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,811]  INFO 10169[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,812]  INFO 10170[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2416&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,812]  INFO 10170[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2416&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:28:30,813]  INFO 10171[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2416&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592501051, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:13,943]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:29:14,098] DEBUG   155[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:14,217] DEBUG   274[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:14,244] DEBUG   301[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:14,607] DEBUG   664[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:14,632] DEBUG   689[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:14,660]  INFO   717[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2416&side=consumer&timestamp=1499592501051 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:14,684] DEBUG   741[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:29:14,684]  INFO   741[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:29:14,747] DEBUG   804[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:29:14,748] DEBUG   805[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:29:15,114] DEBUG  1171[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:29:15,115]  INFO  1172[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:29:15,115] DEBUG  1172[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:29:15,115] DEBUG  1172[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:29:15,144] DEBUG  1201[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:15,173] DEBUG  1230[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:29:15,199]  INFO  1256[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:15,325]  INFO  1382[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:15,740]  INFO  1797[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:15,812] DEBUG  1869[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:15,884] DEBUG  1941[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:15,907] DEBUG  1964[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,045]  INFO  2102[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xf23ebb44, /10.8.128.38:54733 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,045]  INFO  2102[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,094] DEBUG  2151[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,109] DEBUG  2166[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,124] DEBUG  2181[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,167]  INFO  2224[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x1bf6c90c, /10.8.128.38:54734 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,168]  INFO  2225[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,177]  INFO  2234[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,538] DEBUG  2595[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:16,546] DEBUG  2603[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:29:16,583] DEBUG  2640[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:29:16,585] ERROR  2642[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:29:16,585]  WARN  2642[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:29:16,649]  INFO  2706[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:29:16,649] DEBUG  2706[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:29:18,473]  WARN  4530[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:29:18,528] DEBUG  4585[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:29:18,529] DEBUG  4586[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:29:18,529] DEBUG  4586[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 17:29:18,530] DEBUG  4587[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 17:29:21,719] DEBUG  7776[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:21,720] DEBUG  7777[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:29:21,721] DEBUG  7778[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:29:21,721] DEBUG  7778[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:29:21,722] DEBUG  7779[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:29:24,802]  INFO 10859[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,803]  INFO 10860[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=1428&timestamp=1499592554594], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,803]  INFO 10860[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=1428&timestamp=1499592554594, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,804]  INFO 10861[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,834]  INFO 10891[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,834]  INFO 10891[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,835]  INFO 10892[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,835] DEBUG 10892[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:29:24,835]  INFO 10892[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:29:24,836] DEBUG 10893[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:29:24,883] DEBUG 10940[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:29:24,884]  INFO 10941[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54733-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,886]  INFO 10943[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xf23ebb44, /10.8.128.38:54733 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,891]  INFO 10948[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1428&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,894]  INFO 10951[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54734-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,895]  INFO 10952[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x1bf6c90c, /10.8.128.38:54734 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,897]  INFO 10954[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,897]  INFO 10954[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,898]  INFO 10955[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1428&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,898]  INFO 10955[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1428&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:29:24,898]  INFO 10955[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=1428&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592554356, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:19,296]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:30:19,465] DEBUG   169[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:19,587] DEBUG   291[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:19,611] DEBUG   315[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:19,899] DEBUG   603[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:19,918] DEBUG   622[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:19,948]  INFO   652[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=1428&side=consumer&timestamp=1499592554356 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:19,970] DEBUG   674[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:30:19,970]  INFO   674[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:30:20,036] DEBUG   740[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:30:20,036] DEBUG   740[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:30:20,386] DEBUG  1090[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:30:20,387]  INFO  1091[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:30:20,388] DEBUG  1092[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:30:20,388] DEBUG  1092[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:30:20,415] DEBUG  1119[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:20,439] DEBUG  1143[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:30:20,450]  INFO  1154[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:20,598]  INFO  1302[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,042]  INFO  1746[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,114] DEBUG  1818[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,204] DEBUG  1908[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,223] DEBUG  1927[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,347]  INFO  2051[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x015405ae, /10.8.128.38:54759 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,347]  INFO  2051[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,383] DEBUG  2087[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,399] DEBUG  2103[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,413] DEBUG  2117[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,452]  INFO  2156[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x31a70d89, /10.8.128.38:54760 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,453]  INFO  2157[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,464]  INFO  2168[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,822] DEBUG  2526[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:21,836] DEBUG  2540[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:30:21,888] DEBUG  2592[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:30:21,891] ERROR  2595[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:30:21,891]  WARN  2595[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:30:21,946]  INFO  2650[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:30:21,946] DEBUG  2650[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:30:23,495]  WARN  4199[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:30:23,549] DEBUG  4253[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:30:23,550] DEBUG  4254[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:30:23,550] DEBUG  4254[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 17:30:23,551] DEBUG  4255[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 17:30:26,531] DEBUG  7235[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:26,532] DEBUG  7236[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:30:26,533] DEBUG  7237[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:30:26,533] DEBUG  7237[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:30:26,533] DEBUG  7237[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:30:29,781]  INFO 10485[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,783]  INFO 10487[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6256&timestamp=1499592619887], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,784]  INFO 10488[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=6256&timestamp=1499592619887, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,785]  INFO 10489[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,830]  INFO 10534[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,831]  INFO 10535[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,831]  INFO 10535[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,832] DEBUG 10536[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:30:29,832]  INFO 10536[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:30:29,833] DEBUG 10537[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:30:29,860] DEBUG 10564[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:30:29,861]  INFO 10565[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54759-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,862]  INFO 10566[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x015405ae, /10.8.128.38:54759 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,867]  INFO 10571[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6256&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,871]  INFO 10575[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54760-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,872]  INFO 10576[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x31a70d89, /10.8.128.38:54760 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,873]  INFO 10577[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,874]  INFO 10578[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,875]  INFO 10579[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6256&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,875]  INFO 10579[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6256&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:30:29,876]  INFO 10580[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=6256&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592619707, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:06,504]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:31:06,656] DEBUG   152[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:06,779] DEBUG   275[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:06,809] DEBUG   305[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:07,096] DEBUG   592[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:07,117] DEBUG   613[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:07,145]  INFO   641[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=6256&side=consumer&timestamp=1499592619707 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:07,165] DEBUG   661[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:31:07,165]  INFO   661[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:31:07,233] DEBUG   729[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:31:07,233] DEBUG   729[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:31:07,581] DEBUG  1077[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:31:07,582]  INFO  1078[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:31:07,584] DEBUG  1080[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:31:07,585] DEBUG  1081[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:31:07,608] DEBUG  1104[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:07,638] DEBUG  1134[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:31:07,653]  INFO  1149[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:07,793]  INFO  1289[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,204]  INFO  1700[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,269] DEBUG  1765[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,345] DEBUG  1841[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,363] DEBUG  1859[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,511]  INFO  2007[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xc42b9db1, /10.8.128.38:54785 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,513]  INFO  2009[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,590] DEBUG  2086[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,616] DEBUG  2112[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,633] DEBUG  2129[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,674]  INFO  2170[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xf6e0d5c8, /10.8.128.38:54786 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,674]  INFO  2170[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:08,688]  INFO  2184[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:09,034] DEBUG  2530[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:09,042] DEBUG  2538[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:31:09,072] DEBUG  2568[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:31:09,074] ERROR  2570[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:31:09,074]  WARN  2570[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:31:09,134]  INFO  2630[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:31:09,135] DEBUG  2631[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:31:10,711]  WARN  4207[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:31:10,766] DEBUG  4262[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:31:10,766] DEBUG  4262[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:31:10,767] DEBUG  4263[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_quality_check
[2017-07-09 17:31:10,767] DEBUG  4263[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_quality_check
[2017-07-09 17:31:14,000] DEBUG  7496[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:14,001] DEBUG  7497[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:31:14,002] DEBUG  7498[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:31:14,002] DEBUG  7498[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:31:14,003] DEBUG  7499[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:31:16,972]  INFO 10468[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:16,973]  INFO 10469[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=2152&timestamp=1499592667083], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:16,974]  INFO 10470[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=2152&timestamp=1499592667083, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:16,975]  INFO 10471[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,011]  INFO 10507[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,012]  INFO 10508[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,012]  INFO 10508[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,013] DEBUG 10509[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:31:17,013]  INFO 10509[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:31:17,014] DEBUG 10510[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:31:17,042] DEBUG 10538[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:31:17,043]  INFO 10539[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54785-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,044]  INFO 10540[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xc42b9db1, /10.8.128.38:54785 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,046]  INFO 10542[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2152&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,047]  INFO 10543[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54786-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,048]  INFO 10544[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xf6e0d5c8, /10.8.128.38:54786 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,049]  INFO 10545[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,049]  INFO 10545[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,049]  INFO 10545[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2152&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,050]  INFO 10546[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2152&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:31:17,050]  INFO 10546[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=2152&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592666904, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:39,301]  INFO     0[main] - ?.?(?) - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[2017-07-09 17:33:39,452] DEBUG   151[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:39,583] DEBUG   282[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:39,607] DEBUG   306[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:39,846] DEBUG   545[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:39,871] DEBUG   570[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:39,901]  INFO   600[main] - AbstractRegistry.loadProperties(232) -  [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-192.168.4.188.cache, data: {com.navinfo.dataservice.api.man.iface.ManApi=override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400 override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0 override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50 empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,queryCityIdByTaskId,getCityById,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,createJob,getGridIdsByTaskId,queryRegionByDbId,getUserInfoByUserId,queryTaskStatByTaskId,taskUpdateCmsProgress,getSubtaskIdListByDbId,getUsers,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryTaskAll,queryRegionList,close,getCollectTaskIdByDaySubtask,querySpecVersionByType,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,queryBySubtaskId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,queryGridOfCity,getsubtaskUserMap,queryCrowdSubtaskByGrid,endProgressAndSocket&pid=31996&side=consumer&timeout=5000&timestamp=1499390879644 dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=12659&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499346581868, com.navinfo.dataservice.api.metadata.iface.MetadataApi=empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointKindRule,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,queryReliabilityPid,tyCharacterEgalcharExtGetExtentionTypeMap,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,scPointNameckTypeHM6,halfCharList,engConvert,scPointNameckType9,pyConvert,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,getFoodtypeNameMap,queryTmcLine,scPointChainBrandKeyDMap,voiceConvert,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,scPointKindNew5List,pyVoiceConvert,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,scPointBrandFoodtypeChainKindMap,getCrowdTruck,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,scPointNameckTypeD4,getMetadataMap,scPointNameckTypeD3,getScPointTruckList&pid=31996&side=consumer&timeout=5000&timestamp=1499390879668 dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, com.navinfo.dataservice.api.datahub.iface.DatahubApi=override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200 override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0 empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=2152&side=consumer&timestamp=1499592666904 dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064 dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:39,932] DEBUG   631[main] - ZkConnection.connect(63) - Creating new ZookKeeper instance to connect to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683.
[2017-07-09 17:33:39,940]  INFO   639[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(64) - Starting ZkClient event thread.
[2017-07-09 17:33:39,997] DEBUG   696[main] - ZkClient.connect(874) - Awaiting connection to Zookeeper server
[2017-07-09 17:33:39,997] DEBUG   696[main] - ZkClient.waitForKeeperState(628) - Waiting for keeper state SyncConnected
[2017-07-09 17:33:40,345] DEBUG  1044[main-EventThread] - ZkClient.process(351) - Received event: WatchedEvent state:SyncConnected type:None path:null
[2017-07-09 17:33:40,346]  INFO  1045[main-EventThread] - ZkClient.processStateChanged(449) - zookeeper state changed (SyncConnected)
[2017-07-09 17:33:40,346] DEBUG  1045[main-EventThread] - ZkClient.process(395) - Leaving process event
[2017-07-09 17:33:40,346] DEBUG  1045[main] - ZkClient.waitForKeeperState(638) - State is SyncConnected
[2017-07-09 17:33:40,372] DEBUG  1071[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:40,397] DEBUG  1096[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.4.9, current host: 127.0.0.1
[2017-07-09 17:33:40,420]  INFO  1119[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:40,853]  INFO  1552[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,348]  INFO  2047[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, urls: [dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=dubbo-app-man&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=66680&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499502885770, override://192.168.4.188:20888/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=400, override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50, override://192.168.50.42:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.18:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&disabled=true&dynamic=false&enabled=true&weight=50, override://192.168.31.22:20882/com.navinfo.dataservice.api.man.iface.ManApi?category=configurators&dynamic=false&enabled=true&weight=0, empty://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,418] DEBUG  2117[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,502] DEBUG  2201[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispather$Adpative implements com.alibaba.dubbo.remoting.Dispather {
public com.alibaba.dubbo.remoting.ChannelHandler dispath(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispather", url.getParameter("channel.handler", "all"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispather) name from url(" + url.toString() + ") use keys([dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispather extension = (com.alibaba.dubbo.remoting.Dispather)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispather.class).getExtension(extName);
return extension.dispath(arg0, arg1);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,520] DEBUG  2219[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,649]  INFO  2348[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28084 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0xe4ddf0e6, /10.8.128.38:54838 => /192.168.4.188:28084]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,650]  INFO  2349[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28084, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,726] DEBUG  2425[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,745] DEBUG  2444[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,763] DEBUG  2462[main] - ExtensionLoader.createAdaptiveExtensionClassCode(915) -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,791]  INFO  2490[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.man.iface.ManApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=1&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28084%2Fcom.navinfo.dataservice.api.man.iface.ManApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-man%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.man.iface.ManApi%26methods%3DqueryTaskStatByTaskId%2CupdateProduceStatus%2CgetGridIdsBySubtaskId%2CgetGridIdMapBySubtaskId%2CqueryRegionWithMeshes%2CgetGridIdsByTaskId%2CquerySpecVersionByType%2CqueryGridOfCity%2ClistDayDbIdsByAdminId%2CqueryTaskIdsByGrid%2CgetOpendMultiSubtaskGridMappingByDbId%2CendProgressAndSocket%2CgetSubtaskPercentByBlockManId%2CqueryRegionByDbId%2Cclose%2CgetCollectTaskIdByDaySubtask%2CqueryCityIdByTaskId%2CgetUserInfoByUserId%2CqueryAdminIdBySubtask%2CqueryCollectTaskIdsByGridIdList%2ClistDayDbIds%2CgetsubtaskUserMap%2CgetProvinceRegionIdMap%2CqueryDay2MonthList%2CgetCommonSubtaskByQualitySubtask%2CqueryCrowdSubtaskByGrid%2CqueryRegionWithGrids%2CgetAdminCodeAndProvince%2CqueryBySubtaskId%2CqueryBySubTaskIdAndIsQuality%2CgetTaskBySubtaskId%2CqueryByRegionId%2CqueryRegionList%2CgetCityById%2CgetSubtaskIdListByDbId%2CgetProduceProgram%2CqueryConfValueByConfKey%2CqueryQualityLevel%2CtaskUpdateCmsProgress%2CcreateJob%2CqueryTaskAll%2ClistCpRegionProvince%2CpushMessage%2CcloseSubtask%2CgetUsers%2CqueryDbIdByAdminId%26pid%3D66680%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1499502885770&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:41,817]  INFO  2516[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:42,019]  INFO  2718[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:42,695]  INFO  3394[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, urls: [dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=dubbo-app-metadata&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=14381&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1499347757558, empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=configurators&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, empty://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:42,761]  INFO  3460[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28083 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x2bc13f71, /10.8.128.38:54841 => /192.168.4.188:28083]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:42,761]  INFO  3460[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28083, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:42,763]  INFO  3462[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.metadata.iface.MetadataApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=1&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28083%2Fcom.navinfo.dataservice.api.metadata.iface.MetadataApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-metadata%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.metadata.iface.MetadataApi%26methods%3DscPointNameckTypeD10%2CscPointKindNew5List%2CscPointKindNewChainKind5Map%2CscPointSpecKindCodeType8%2CscPointNameckTypeD7%2CgetChainNameMap%2CgetTyCharacterFjtHmCheckMap%2CscPointChainBrandKeyDMap%2CsearchByErrorName%2CscEngshortListMap%2CqueryAdRack%2CqueryMeshes4PartitionByAdmincodes%2CgetAddrAdminMap%2CgetAddrck%2CgetFoodtypeNameMap%2CqueryImportantPid%2CscPointFoodtypeFoodTypes%2CpyVoiceConvert%2ClistMeshes4Partition%2CgetKindNameByKindCode%2CscPointAdminareaContactMap%2CscPointNameckTypeD4_10%2CgetCrowdTruck%2CjudgeScPointKind%2CscPointKindNewChainKind8Map%2CgetAdminMap%2CwordKind%2CsearchScPointPoiCodeNew%2CscPointSpecKindCodeType14%2CscPointSpecKindCodeType15%2CscPointMinganListPidNameList%2CgetProvinceAndCityByAdminCode%2CgetScPointTruckList%2CtyCharacterFjtHzConvertFtMap%2CqueryAdminIdByLocation%2CtyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap%2CsearchKindName%2CgetCloseMeshs%2CgetCharacterMap%2CscPointBrandFoodtypeChainKindMap%2CgetDeepAdminCodeList%2CscPointKindRule5%2CtyCharacterEgalcharExt%2CsearchScFmControl%2CconvFull2Half%2CscPointNominganListPidNameList%2CqueryReliabilityPid%2CqueryTmcLine%2CvoiceConvert%2CtyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap%2CtyCharacterEgalcharExtGetExtentionTypeMap%2CscPointCode2Level%2ChalfCharList%2CpyConvert%2CscPointBrandFoodtypeKindBrandMap%2CscPointNameckTypeHM6%2CsearchScPointFocus%2CgetMetadataMap%2CscPointKindNewChainKind6Map%2CsearchByAdminCode%2CscPointNameckType9%2CscPointAdminareaDataMap%2CconvertEng%2CscPointKindRule%2CScPointSpecKindcodeNewType2%2CscPointNameckTypeD1_2_3_4_8_11%2CgetMetadataMap2%2CscPointChainCodeList%2CscPointEngKeyWordsType1%2CgetKindCodeDList%2CscPointFoodtypeDrinkMap%2CscPointCode2LevelOld%2CscPointNameckTypeD1%2CscPointNameckTypeD4%2CnameImport%2CscSensitiveWordsMap%2CscPointNameckTypeD3%2CscPointNameckTypeD6%2CscPointNameckTypeD5%2CqueryTmcPoint%2CscPointFoodtypeKindList%2CciParaKindKeywordMap%2CengConvert%2CgetLevelForMulti%26pid%3D14381%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1499347757558&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,290] DEBUG  3989[DubboClientHandler-192.168.4.188:28084-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,297]  INFO  3996[main] - AbstractRegistry.register(302) -  [DUBBO] Register: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,404]  INFO  4103[main] - AbstractRegistry.subscribe(325) -  [DUBBO] Subscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,841]  INFO  4540[main] - AbstractRegistry.notify(422) -  [DUBBO] Notify urls for subscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, urls: [dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=108965&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1497192004064, dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=dubbo-app-datahub-2&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=15862&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1498706679709, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.31.22:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=0, override://192.168.4.188:20881/com.navinfo.dataservice.api.datahub.iface.DatahubApi?category=configurators&dynamic=false&enabled=true&weight=200, empty://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,867]  INFO  4566[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.188:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x21dabfd7, /10.8.128.38:54842 => /192.168.4.188:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,867]  INFO  4566[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,954]  INFO  4653[main] - AbstractClient.connect(287) -  [DUBBO] Successed connect to server /192.168.4.110:28089 from NettyClient 192.168.64.47 using dubbo version 2.4.9, channel is NettyChannel [channel=[id: 0x77805b04, /10.8.128.38:54843 => /192.168.4.110:28089]], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,955]  INFO  4654[main] - AbstractClient.<init>(105) -  [DUBBO] Start NettyClient User-PC/192.168.64.47 connect to the server /192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:43,956]  INFO  4655[main] - ReferenceConfig.createProxy(425) -  [DUBBO] Refer dubbo service com.navinfo.dataservice.api.datahub.iface.DatahubApi from url zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=datahub-api-consumer&check=false&connected=true&dubbo=2.4.9&inside.invoker.count=2&inside.invokers=dubbo%3A%2F%2F192.168.4.188%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D108965%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1497192004064%3Bdubbo%3A%2F%2F192.168.4.110%3A28089%2Fcom.navinfo.dataservice.api.datahub.iface.DatahubApi%3Fanyhost%3Dtrue%26application%3Ddubbo-app-datahub-2%26dubbo%3D2.4.9%26interface%3Dcom.navinfo.dataservice.api.datahub.iface.DatahubApi%26methods%3DgetDbById%2CgetSuperDb%2CgetOnlyDbByType%2CgetReuseDb%26pid%3D15862%26revision%3D0.0.1-SNAPSHOT%26side%3Dprovider%26timestamp%3D1498706679709&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:44,067] DEBUG  4766[DubboClientHandler-192.168.4.110:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:44,074] DEBUG  4773[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /com/navinfo/dataservice/commons/config/SystemConfig.xml
[2017-07-09 17:33:44,103] DEBUG  4802[main] - DynamicSystemConfig.loadRawConfig(56) - parse file /SystemConfig.xml
[2017-07-09 17:33:44,106] ERROR  4805[main] - DynamicSystemConfig.loadRawConfig(74) - null Nested exception: null
[2017-07-09 17:33:44,107]  WARN  4806[main] - DynamicSystemConfig.loadRawConfig(75) - 加载配置文件/SystemConfig.xml错误，已忽略。。。
[2017-07-09 17:33:44,168]  INFO  4867[main] - DriverManagerDataSource.setDriverClassName(133) - Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
[2017-07-09 17:33:44,169] DEBUG  4868[main] - DriverManagerDataSource.getConnectionFromDriver(142) - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@192.168.4.131:1521/orcl]
[2017-07-09 17:33:45,743]  WARN  6442[main] - DynamicSystemConfig.loadDynamicConfig(110) - 系统未配置app.type类型，已忽略。。。
[2017-07-09 17:33:45,795] DEBUG  6494[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:33:45,795] DEBUG  6494[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.61:1521/orcl
[2017-07-09 17:33:45,795] DEBUG  6494[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_regiondb_trunk_d_1
[2017-07-09 17:33:45,796] DEBUG  6495[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_regiondb_trunk_d_1
[2017-07-09 17:33:48,724] DEBUG  9423[DubboClientHandler-192.168.4.188:28089-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:48,724] DEBUG  9423[main] - MultiDataSourceFactory.getDataSource(155) - =============================DBINFO==========================
[2017-07-09 17:33:48,725] DEBUG  9424[main] - MultiDataSourceFactory.getDataSource(156) - url:jdbc:oracle:thin:@192.168.4.131:1521/orcl
[2017-07-09 17:33:48,725] DEBUG  9424[main] - MultiDataSourceFactory.getDataSource(157) - username:fm_man_trunk
[2017-07-09 17:33:48,725] DEBUG  9424[main] - MultiDataSourceFactory.getDataSource(158) - password:fm_man_trunk
[2017-07-09 17:33:52,008] DEBUG 12707[DubboClientHandler-192.168.4.188:28083-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,132]  INFO 12831[main] - LogReader.getUpdatedObj(609) -  WITH A AS                                                                      (SELECT D.OB_PID, MAX(P.OP_DT) DT                                                FROM LOG_DETAIL D, LOG_DETAIL_GRID G, LOG_OPERATION P                        WHERE D.OP_ID = P.OP_ID                                                         AND D.ROW_ID = G.LOG_ROW_ID                                                   AND D.OB_NM = ?                                                      AND D.OB_PID IN (select to_number(column_value) from table(clob_to_table(?)))    GROUP BY OB_PID),                                                          B AS                                                                           (SELECT D.OB_PID, D.OP_TP                                                        FROM LOG_DETAIL D, LOG_DETAIL_GRID G, LOG_OPERATION P                        WHERE D.OP_ID = P.OP_ID                                                         AND D.ROW_ID = G.LOG_ROW_ID                                                  AND D.OB_PID IN (select to_number(column_value) from table(clob_to_table(?)))      AND D.OB_NM = ?                                                       AND D.TB_NM = ?                                                ), C AS                                                                           (SELECT DISTINCT A.OB_PID, 3 OP_TP                                               FROM A                                                                       WHERE NOT EXISTS (SELECT 1 FROM B WHERE A.OB_PID = B.OB_PID)),             D AS                                                                           (SELECT DISTINCT B.OB_PID, 1 OP_TP                                               FROM B                                                                       WHERE B.OP_TP = 1                                                               AND NOT EXISTS (SELECT 1                                                             FROM B BB                                                                    WHERE BB.OB_PID = B.OB_PID                                                      AND BB.OP_TP = 2)),                                               E AS                                                                           (SELECT DISTINCT B.OB_PID, 2 OP_TP                                               FROM B                                                                       WHERE B.OP_TP = 2 ),                                               F AS                                                                           (SELECT DISTINCT B.OB_PID, 3 OP_TP                                               FROM B                                                                       WHERE B.OP_TP = 3                                                               AND NOT EXISTS (SELECT 1                                                             FROM B BB                                                                    WHERE BB.OB_PID = B.OB_PID                                                      AND BB.OP_TP IN (1, 2)))                                                                                                                        SELECT * FROM C                                                               UNION ALL SELECT * FROM D                                                     UNION ALL SELECT * FROM E                                                     UNION ALL SELECT * FROM F                                                    
[2017-07-09 17:33:52,633] DEBUG 13332[DubboClientHandler-192.168.4.188:28084-thread-1] - DecodeHandler.decode(60) -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,743]  INFO 13442[DubboShutdownHook] - AbstractConfig$1.run(450) -  [DUBBO] Run shutdown hook now., dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,744]  INFO 13443[DubboShutdownHook] - AbstractRegistryFactory.destroyAll(63) -  [DUBBO] Close all registries [zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4472&timestamp=1499592819830], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,744]  INFO 13443[DubboShutdownHook] - AbstractRegistry.destroy(485) -  [DUBBO] Destroy registry:zookeeper://192.168.4.188:2681/com.alibaba.dubbo.registry.RegistryService?application=datahub-api-consumer&backup=192.168.4.188:2682,192.168.4.188:2683&dubbo=2.4.9&interface=com.alibaba.dubbo.registry.RegistryService&pid=4472&timestamp=1499592819830, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,744]  INFO 13443[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,866]  INFO 13565[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,866]  INFO 13565[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,967]  INFO 13666[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:52,967]  INFO 13666[DubboShutdownHook] - AbstractRegistry.unregister(312) -  [DUBBO] Unregister: consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,273]  INFO 13972[DubboShutdownHook] - AbstractRegistry.destroy(494) -  [DUBBO] Destroy unregister url consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=consumers&check=false&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,273]  INFO 13972[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,274]  INFO 13973[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.man.iface.ManApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryDay2MonthList,getCommonSubtaskByQualitySubtask,getProduceProgram,queryTaskIdsByGrid,getCityById,queryCityIdByTaskId,queryRegionWithGrids,getGridIdMapBySubtaskId,queryConfValueByConfKey,getGridIdsByTaskId,createJob,queryRegionByDbId,getUserInfoByUserId,taskUpdateCmsProgress,queryTaskStatByTaskId,getUsers,getSubtaskIdListByDbId,queryByRegionId,queryCollectTaskIdsByGridIdList,listCpRegionProvince,getProvinceRegionIdMap,queryRegionList,queryTaskAll,close,querySpecVersionByType,getCollectTaskIdByDaySubtask,getOpendMultiSubtaskGridMappingByDbId,updateProduceStatus,queryBySubtaskId,queryBySubTaskIdAndIsQuality,queryDbIdByAdminId,getSubtaskPercentByBlockManId,listDayDbIdsByAdminId,listDayDbIds,closeSubtask,queryQualityLevel,getGridIdsBySubtaskId,getTaskBySubtaskId,pushMessage,queryRegionWithMeshes,getAdminCodeAndProvince,queryAdminIdBySubtask,getsubtaskUserMap,queryGridOfCity,endProgressAndSocket,queryCrowdSubtaskByGrid&pid=4472&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,274]  INFO 13973[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,274]  INFO 13973[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.datahub.iface.DatahubApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getOnlyDbByType,getDbById,getSuperDb,getReuseDb&pid=4472&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,274]  INFO 13973[DubboShutdownHook] - AbstractRegistry.unsubscribe(343) -  [DUBBO] Unsubscribe: consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,275]  INFO 13974[DubboShutdownHook] - AbstractRegistry.destroy(510) -  [DUBBO] Destroy unsubscribe url consumer://192.168.64.47/com.navinfo.dataservice.api.metadata.iface.MetadataApi?application=datahub-api-consumer&category=providers,configurators,routers&connected=true&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,scPointKindRule,searchByAdminCode,ScPointSpecKindcodeNewType2,scPointNameckTypeD7,getCharacterMap,getDeepAdminCodeList,scPointKindNewChainKind8Map,tyCharacterEgalcharExtGetExtentionTypeMap,queryReliabilityPid,scPointNameckTypeD1_2_3_4_8_11,searchByErrorName,scPointNameckTypeD10,wordKind,scPointFoodtypeKindList,scPointBrandFoodtypeKindBrandMap,queryMeshes4PartitionByAdmincodes,getAdminMap,getProvinceAndCityByAdminCode,searchScPointFocus,scPointNominganListPidNameList,scPointEngKeyWordsType1,halfCharList,scPointNameckTypeHM6,engConvert,pyConvert,scPointNameckType9,scPointSpecKindCodeType8,queryAdRack,getKindNameByKindCode,scEngshortListMap,listMeshes4Partition,scPointKindNewChainKind5Map,scPointSpecKindCodeType15,scPointSpecKindCodeType14,scPointAdminareaDataMap,searchScPointPoiCodeNew,tyCharacterFjtHzConvertFtMap,getMetadataMap2,getLevelForMulti,scSensitiveWordsMap,scPointFoodtypeDrinkMap,getAddrck,convFull2Half,tyCharacterEgalcharExt,scPointMinganListPidNameList,queryTmcLine,getFoodtypeNameMap,voiceConvert,scPointChainBrandKeyDMap,scPointKindNewChainKind6Map,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,getAddrAdminMap,queryTmcPoint,ciParaKindKeywordMap,queryImportantPid,getChainNameMap,scPointCode2Level,scPointKindRule5,getCloseMeshs,getKindCodeDList,pyVoiceConvert,scPointKindNew5List,convertEng,scPointChainCodeList,judgeScPointKind,searchKindName,nameImport,getCrowdTruck,scPointBrandFoodtypeChainKindMap,getTyCharacterFjtHmCheckMap,scPointNameckTypeD4_10,scPointFoodtypeFoodTypes,scPointAdminareaContactMap,searchScFmControl,scPointCode2LevelOld,queryAdminIdByLocation,scPointNameckTypeD1,scPointNameckTypeD6,scPointNameckTypeD5,getMetadataMap,scPointNameckTypeD4,scPointNameckTypeD3,getScPointTruckList&pid=4472&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,275] DEBUG 13974[DubboShutdownHook] - ZkClient.close(915) - Closing ZkClient...
[2017-07-09 17:33:53,275]  INFO 13974[ZkClient-EventThread-13-192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683] - ZkEventThread.run(82) - Terminate ZkClient event thread.
[2017-07-09 17:33:53,286] DEBUG 13985[DubboShutdownHook] - ZkConnection.close(77) - Closing ZooKeeper connected to 192.168.4.188:2681,192.168.4.188:2682,192.168.4.188:2683
[2017-07-09 17:33:53,312] DEBUG 14011[DubboShutdownHook] - ZkClient.close(928) - Closing ZkClient...done
[2017-07-09 17:33:53,312]  INFO 14011[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54842-->/192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,313]  INFO 14012[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x21dabfd7, /10.8.128.38:54842 => /192.168.4.188:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,314]  INFO 14013[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28089,url:dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,317]  INFO 14016[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54843-->/192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,317]  INFO 14016[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x77805b04, /10.8.128.38:54843 => /192.168.4.110:28089], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,318]  INFO 14017[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54841-->/192.168.4.188:28083, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,318]  INFO 14017[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0x2bc13f71, /10.8.128.38:54841 => /192.168.4.188:28083], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,318]  INFO 14017[DubboShutdownHook] - DubboProtocol.destroy(407) -  [DUBBO] Close dubbo connect: /10.8.128.38:54838-->/192.168.4.188:28084, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,319]  INFO 14018[DubboSharedHandler-thread-2] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28083,url:dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,319]  INFO 14018[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.110:28089,url:dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,320]  INFO 14019[DubboShutdownHook] - NettyChannel.close(135) -  [DUBBO] Close netty channel [id: 0xe4ddf0e6, /10.8.128.38:54838 => /192.168.4.188:28084], dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,320]  INFO 14019[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,320]  INFO 14019[DubboSharedHandler-thread-1] - DubboProtocol$1.disconnected(130) -  [DUBBO] disconected from /192.168.4.188:28084,url:dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=datahub-api-consumer&check=false&codec=dubbo&dubbo=2.4.9&heartbeat=60000&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,321]  INFO 14020[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.110:28089, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,321]  INFO 14020[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28083, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,321]  INFO 14020[DubboShutdownHook] - DubboProtocol.destroy(421) -  [DUBBO] Close dubbo connect: 192.168.64.47:0-->192.168.4.188:28084, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,321]  INFO 14020[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28083/com.navinfo.dataservice.api.metadata.iface.MetadataApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.metadata.iface.MetadataApi&methods=scPointNameckTypeD10,scPointKindNew5List,scPointKindNewChainKind5Map,scPointSpecKindCodeType8,scPointNameckTypeD7,getChainNameMap,getTyCharacterFjtHmCheckMap,scPointChainBrandKeyDMap,searchByErrorName,scEngshortListMap,queryAdRack,queryMeshes4PartitionByAdmincodes,getAddrAdminMap,getAddrck,getFoodtypeNameMap,queryImportantPid,scPointFoodtypeFoodTypes,pyVoiceConvert,listMeshes4Partition,getKindNameByKindCode,scPointAdminareaContactMap,scPointNameckTypeD4_10,getCrowdTruck,judgeScPointKind,scPointKindNewChainKind8Map,getAdminMap,wordKind,searchScPointPoiCodeNew,scPointSpecKindCodeType14,scPointSpecKindCodeType15,scPointMinganListPidNameList,getProvinceAndCityByAdminCode,getScPointTruckList,tyCharacterFjtHzConvertFtMap,queryAdminIdByLocation,tyCharacterFjtHzCheckSelectorGetFtExtentionTypeMap,searchKindName,getCloseMeshs,getCharacterMap,scPointBrandFoodtypeChainKindMap,getDeepAdminCodeList,scPointKindRule5,tyCharacterEgalcharExt,searchScFmControl,convFull2Half,scPointNominganListPidNameList,queryReliabilityPid,queryTmcLine,voiceConvert,tyCharacterFjtHzCheckSelectorGetJtExtentionTypeMap,tyCharacterEgalcharExtGetExtentionTypeMap,scPointCode2Level,halfCharList,pyConvert,scPointBrandFoodtypeKindBrandMap,scPointNameckTypeHM6,searchScPointFocus,getMetadataMap,scPointKindNewChainKind6Map,searchByAdminCode,scPointNameckType9,scPointAdminareaDataMap,convertEng,scPointKindRule,ScPointSpecKindcodeNewType2,scPointNameckTypeD1_2_3_4_8_11,getMetadataMap2,scPointChainCodeList,scPointEngKeyWordsType1,getKindCodeDList,scPointFoodtypeDrinkMap,scPointCode2LevelOld,scPointNameckTypeD1,scPointNameckTypeD4,nameImport,scSensitiveWordsMap,scPointNameckTypeD3,scPointNameckTypeD6,scPointNameckTypeD5,queryTmcPoint,scPointFoodtypeKindList,ciParaKindKeywordMap,engConvert,getLevelForMulti&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timeout=5000&timestamp=1499592819737, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,321]  INFO 14020[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.110:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,321]  INFO 14020[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28084/com.navinfo.dataservice.api.man.iface.ManApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.man.iface.ManApi&methods=queryTaskStatByTaskId,updateProduceStatus,getGridIdsBySubtaskId,getGridIdMapBySubtaskId,queryRegionWithMeshes,getGridIdsByTaskId,querySpecVersionByType,queryGridOfCity,listDayDbIdsByAdminId,queryTaskIdsByGrid,getOpendMultiSubtaskGridMappingByDbId,endProgressAndSocket,getSubtaskPercentByBlockManId,queryRegionByDbId,close,getCollectTaskIdByDaySubtask,queryCityIdByTaskId,getUserInfoByUserId,queryAdminIdBySubtask,queryCollectTaskIdsByGridIdList,listDayDbIds,getsubtaskUserMap,getProvinceRegionIdMap,queryDay2MonthList,getCommonSubtaskByQualitySubtask,queryCrowdSubtaskByGrid,queryRegionWithGrids,getAdminCodeAndProvince,queryBySubtaskId,queryBySubTaskIdAndIsQuality,getTaskBySubtaskId,queryByRegionId,queryRegionList,getCityById,getSubtaskIdListByDbId,getProduceProgram,queryConfValueByConfKey,queryQualityLevel,taskUpdateCmsProgress,createJob,queryTaskAll,listCpRegionProvince,pushMessage,closeSubtask,getUsers,queryDbIdByAdminId&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timeout=5000&timestamp=1499592819714, dubbo version: 2.4.9, current host: 192.168.64.47
[2017-07-09 17:33:53,322]  INFO 14021[DubboShutdownHook] - AbstractProtocol.destroy(63) -  [DUBBO] Destroy reference: dubbo://192.168.4.188:28089/com.navinfo.dataservice.api.datahub.iface.DatahubApi?anyhost=true&application=datahub-api-consumer&check=false&dubbo=2.4.9&interface=com.navinfo.dataservice.api.datahub.iface.DatahubApi&methods=getDbById,getSuperDb,getOnlyDbByType,getReuseDb&pid=4472&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1499592819702, dubbo version: 2.4.9, current host: 192.168.64.47
